TestingCloudera Docs
Testing
After you install, configure, and start Profiler, you should validate that the
        Profiler is working correctly.

Login to the server hosting Metron.

Enter the following command:

[root@node1 0.3.0]# bin/stellar -z $ZOOKEEPER_HOST:2181
Stellar, Go!
Please note that functions are loading lazily in the background and will be unavailable until loaded fully.
{es.clustername=metron, es.ip=node1, es.port=9300, es.date.format=yyyy.MM.dd.HH}

[Stellar]>>> ?PROFILE_GET
Functions loaded, you may refer to functions now...
PROFILE_GET
Description: Retrieves a series of values from a stored profile.

Arguments:
    profile - The name of the profile.
    entity - The name of the entity.
    durationAgo - How long ago should values be retrieved from?
    periods - The list of profile periods to grab. These are ProfilePeriod objects.
    groups - Optional, must correspond to the 'groupBy' list used in profile creation - List (in square brackets) of groupBy values used to filter the profile. Default is the empty list, meaning groupBy was not used when creating the profile.
    config_overrides - Optional - Map (in curly braces) of name:value pairs, each overriding the global config parameter of the same name. Default is the empty Map, meaning no overrides.
Returns: The profile measurements.

[Stellar]>>> PROFILE_GET('test','192.168.138.158', 1, 'HOURS') [12078.0, 8921.0, 12131.0]

In the preceeding example, we use the Stellar Shell to replicate the execution
                    environment of Stellar running in a Storm topology, like Metron's Parser or
                    Enrichment topology. Replace 'node1:2181' with the URL to a ZooKeeper
                    Broker.
The client API call above retrieves the past hour of the test
                    profile for the entity 192.168.138.158.


Parent topic: Setting Up a Profile Overview