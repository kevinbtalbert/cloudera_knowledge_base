Tuning an Enrichment TopologyCloudera Docs
Tuning an Enrichment
        Topology
Enrichment settings focus more on the compute workload than on the mapping workload in
        parsers or the IO driven workload in indexing. Enrichments make significant use of caching
        for performance. Because all of the data is coming together in enrichments, you will
        probably need larger enrichments settings than your parallelism settings. You can modify
        many performance tuning properties for enrichment using Ambari or Storm Flux. Modifying
        properties using Ambari is simple and can be performed by any user. However, you should have
        knowledge of Storm Flux usage and formatting before attempting to modify any Flux
        files.
Test Enrichment Topology SettingsWhile the parameters for the Enrichments topology should be modified via Ambari for       persistence, there is a method by which the topologies can be started via the command line on       the Metron node and parameters easily modified for testing. The commands below demonstrate how       to create a copy of the Metron files for making changes quickly during testing.Tune Enrichment Kafka PartitionsThe first enrichment variable that should be determined is the minimum number of Kafka       partitions required. Storm Enrichment ParametersYou can modify various Storm enrichment properties for the unified topology using       Ambari.Tune Enrichment Core Storm SettingsYou can set the number of Kafka spouts to match the number of Kafka partitions. You       can also increase the number of workers and ackers to match the Storm nodes, unless the       estimated throughput for the parser is very low.Tune Additional Enrichment Storm SettingsAfter the number of enrichment executors has been determined and thoroughly tested,       you can set or modify the last remaining Storm parameters.Modifying Enrichment Properties Using Flux (Advanced)Some of the tuning enrichment properties can only be modified using Flux. However, if       you manually change your Flux file, if you perform an upgrade, Ambari will overwrite all of       your changes. Be sure to save your Flux changes prior to performing an upgrade.