Flink TerminologyCloudera Docs
Flink Terminology
The list of Flink terminology details the Flink specific terms that are used in the
    Cloudera Streaming Analytics documentation.


Event
An event is a statement about a change of the state of the domain modelled by the
      application. Events can be input and/or output of a stream or batch processing application.
      Events are special types of records.
Function
Functions are implemented by the user and encapsulate the application logic of a Flink
      program. Most Functions are wrapped by a corresponding Operator.
Flink Application

A Flink application is a Java Application that submits one or multiple Flink Jobs from the
                main() method. Submitting jobs is usually done by calling
                execute() on an execution environment.

Flink Job
A Flink Job is the runtime representation of a logical graph (also often called dataflow
      graph) that is created and submitted by calling execute() in a Flink
      Application.
Flink JobManager
The JobManager is the orchestrator of a Flink Cluster. It contains three distinct
      components: Flink Resource Manager, Flink Dispatcher and one Flink JobMaster per running Flink
      Job.
Logical Graph
A logical graph is a directed graph where the nodes are Operators and the edges define
      input/output-relationships of the operators and correspond to data streams or data sets. A
      logical graph is created by submitting jobs from a Flink Application. Logical graphs are also
      often referred to as dataflow graphs.
Operator
Node of a Logical Graph. An Operator performs a certain operation, which is usually
      executed by a Function. Sources and Sinks are special Operators for data ingestion and data
      egress.
Flink Session Cluster
A long-running Flink Cluster which accepts multiple Flink Jobs for execution. The lifetime
      of this Flink Cluster is not bound to the lifetime of any Flink Job.
State Backend
For stream processing programs, the State Backend of a Flink Job determines how its state
      is stored on each TaskManager (Java Heap of TaskManager or (embedded) RocksDB) as well as
      where it is written upon a checkpoint (Java Heap of JobManager or Filesystem).
Task
Node of a Physical Graph. A task is the basic unit of work, which is executed by Flink’s
      runtime. Tasks encapsulate exactly one parallel instance of an Operator or Operator
      Chain.
Flink TaskManager
TaskManagers are the worker processes of a Flink Cluster. Tasks are scheduled to
      TaskManagers for execution. They communicate with each other to exchange data between
      subsequent Tasks.
Transformation
A Transformation is applied on one or more data streams or data sets and results in one or
      more output data streams or data sets. A transformation might change a data stream or data set
      on a per-record basis, but might also only change its partitioning or perform an aggregation.
      While Operators and Functions are the “physical” parts of Flink’s API, Transformations are
      only an API concept. Specifically, most transformations are implemented by certain
      Operators.


For the complete list of Flink terminology, see the Apache documentation.

Parent topic: Reference