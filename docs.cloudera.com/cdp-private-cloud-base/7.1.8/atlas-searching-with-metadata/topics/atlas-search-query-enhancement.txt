Enhancements with search queryCloudera Docs
Enhancements with search query
When you perform search operations in Atlas, note some of the new changes that are in
        effect.
First use case
Performing freetext / quick search does not require pre-fixing the attribute
            name in the search text query. 
You can directly search for the entities by searching with its value.
For example:
To search entity having:
qualifiedName="default.avbzi_random_table@cm"
You can directly add "default.avbzi_random_table@cm" in the
            search bar.



Second use case
While using the basic / quick search in Atlas, the characters which are not
            alphabetic and numeric are considered as special characters except for the following
            characters:
_, ., :, and ‘

noteWhen using ., :, and ‘ characters, if the prefix or suffix does not
                contain alphabet character, it is considered a special character.

For example:
default.1marketing > . will be considered as a special character because suffix
            is numeric not alphabetic
default.marketing > . will not be considered as a special character because
            prefix and suffix are alphabetic
Additionally, while performing the search operation, when the search string has
            special characters, SOLR tokenizes the string enabling the search result query to
            provide OR condition of each tokenized string.
For example: if search string is provided as default.avbzi_random_table@cm
results in, picking up all the matching documents or attributes, where,
            attribute contains default.avbzi_random_table OR cm.



If a string is enclosed with double quotes, SOLR does not tokenize and behave
            as a single string.
For example: if search string is like "default.avbzi_random_table@cm"
results in, picking up all the matching documents or attributes, where,
            attribute contains default.avbzi_random_table AND cm.



Third use case 
In Atlas, name and qualifiedName attributes are different in the
            way they operate in Atlas Properties. The qualifiedName is a text-based attribute
            while the name is a string-based attribute. SOLR does not tokenize any
            string type attribute and does tokenize the text-based attribute.
When you search for 'STRING' type attribute called: 'name', the following
            conditions must be met:


Client has to escape 'space'


For the partial search, client has to append ''{*}





For example: While searching for string with name = finance
                department@axis, user has to search like finance\ department*
Whenever you search for a 'TEXT' type attribute called: 'qualifiedName',
            the following conditions must be met:


No Need of escape 'space'. If it is escaped partial search will not
                    work


For partial search, no need of appending ''{*}


For example: While searching for string with qualifiedName = finance
                department@axis, user has to search like finance department or finance\
            department@axis

