Contents of the BlockCacheCloudera Docs
Contents of the BlockCache
In HBase, a block is a single unit of I/O. The block cache keeps data blocks resident
    in the memory after they are read. 
To size the BlockCache correctly, you need to
        understand what HBase places into it.
Your data: Each time a Get or Scan operation occurs, the
            result is added to the BlockCache if it was not already cached
            there. If you use the BucketCache, data blocks are always cached in
            the BucketCache.
Row keys: When a value is loaded into the cache, its row
            key is also cached. This is one reason to make your row keys as
            small as possible. A larger row key takes up more space in the
            cache.
hbase:meta: The hbase:meta catalog table
            keeps track of which RegionServer is serving which regions. It can
            consume several megabytes of cache if you have a large number of
            regions, and has in-memory access priority, which
            means HBase attempts to keep it in the cache as long as
            possible.
Indexes of HFiles: HBase stores its data in HDFS in a
            format called HFile. These HFiles contain indexes which allow
            HBase to seek for data within them without needing to open the
            entire HFile. The size of an index is a factor of the block size,
            the size of your row keys, and the amount of data you are storing.
            For big data sets, the size can exceed 1 GB per RegionServer,
            although the entire index is unlikely to be in the cache at the same
            time. If you use the BucketCache, indexes are always cached
            on-heap.
Bloom filters: If you use Bloom filters, they are stored in
            the BlockCache. If you use the BucketCache, Bloom filters are always
            cached on-heap.

The sum of the sizes of these objects is highly dependent on your usage
        patterns and the characteristics of your data. For this reason, the
        HBase Web UI and Cloudera Manager each expose several metrics to help
        you size and tune the BlockCache.

Parent topic: Configuring HBase BlockCache