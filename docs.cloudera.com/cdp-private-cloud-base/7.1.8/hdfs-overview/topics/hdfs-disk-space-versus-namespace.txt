Disk space versus namespaceCloudera Docs
Disk space versus namespace
The HDFS default block size (dfs.blocksize) is set to 128 MB. Each
    namespace object on the NameNode consumes approximately 150 bytes. 
On DataNodes, data files are measured by disk space consumed—the actual
        data length—and not necessarily the full block size. For example, a file
        that is 192 MB consumes 192 MB of disk space and not some
        integral multiple of the block size. Using the default block size of 128
        MB, a file of 192 MB is split into two block files, one 128 MB file and
        one 64 MB file. On the NameNode, namespace objects are measured by the
        number of files and blocks. The same 192 MB file is represented by three
        namespace objects (1 file inode + 2 blocks) and consumes approximately
        450 bytes of memory. 
Large files split into fewer blocks generally consume less memory than small files that
      generate many blocks. One data file of 128 MB is represented by two namespace objects on the
      NameNode (1 file inode + 1 block) and consumes approximately 300 bytes of memory. By contrast,
      128 files of 1 MB each are represented by 256 namespace objects (128 file inodes + 128 blocks)
      and consume approximately 38,400 bytes. The optimal split size, then, is some integral
      multiple of the block size, for memory management as well as data locality optimization. 
By default, Cloudera Manager allocates a maximum heap space of 1 GB for
        every million blocks (but never less than 1 GB). How much memory you
        actually need depends on your workload, especially on the number of
        files, directories, and blocks generated in each namespace. If all of
        your files are split at the block size, you could allocate 1 GB for
        every million files. But given the historical average of 1.5
        blocks per file (2 block objects), a more conservative estimate is 1 GB
        of memory for every million blocks. 
importantCloudera recommends 1 GB of NameNode heap space
          per million blocks to account for the namespace objects, necessary
          bookkeeping data structures, and the remote procedure call (RPC)
          workload. In practice, your heap requirements will likely be less than
          this conservative estimate. 

Parent topic: Sizing NameNode heap memory