Overview of HDFSCloudera Docs
Overview of HDFS
Hadoop Distributed File System (HDFS) is a Java-based file system for storing large
      volumes of data. Designed to span large clusters of commodity servers, HDFS provides scalable
      and reliable data storage.
HDFS forms the data
         management layer of Apache Hadoop. YARN provides the resource management while HDFS
         provides the storage.
HDFS is a scalable, fault-tolerant, distributed storage system that works closely with a
         wide variety of concurrent data access applications. By distributing storage and
         computation across many servers, the combined storage resource grows linearly with
         demand.
Components of an HDFS cluster
An HDFS cluster contains the following main components: a NameNode and DataNodes.
The NameNode manages the cluster metadata that includes file and directory structures,
            permissions, modifications, and disk space quotas. The file content is split into
            multiple data blocks, with each block replicated at multiple DataNodes.
The NameNode actively monitors the number of replicas of a block. In addition, the
            NameNode maintains the namespace tree and the mapping of blocks to DataNodes, holding
            the entire namespace image in RAM.
High-Availability (HA) clusters contain a standby for the active NameNode to avoid a
            single point of failure. These clusters use JournalNodes to synchronize the active and
            standby NameNodes. 

Benefits of HDFS
HDFS provides the following benefits as a result of which data is stored efficiently and
            is highly available in the cluster:
Rack awareness: A node's physical location is considered when allocating storage
                  and scheduling tasks.
Minimal data motion: Hadoop moves compute processes to the data on HDFS.
                  Processing tasks can occur on the physical node where the data resides. This
                  significantly reduces network I/O and provides very high aggregate bandwidth.
Utilities: Dynamically diagnose the health of the file system and rebalance the
                  data on different nodes.
Version rollback: Allows operators to perform a rollback to the previous version
                  of HDFS after an upgrade, in case of human or systemic errors.
Standby NameNode: Provides redundancy and supports high availability (HA).
Operability: HDFS requires minimal operator intervention, allowing a single
                  operator to maintain a cluster of thousands of nodes



Related informationApache Hadoop HDFSParent topic: Introduction