Installing Python 3.8 on SLES 15 for Cloudera Manager 7.7.3Cloudera Docs
Installing Python 3.8 on SLES 15 for Cloudera Manager 7.7.3
You must install Python 3.8 on all cluster hosts before installing Cloudera Manager and
    adding services to your cluster. 

You can either install the standard Python 3.8 package prepackaged with the SLES 15 operating
        system or a custom Python 3.8 package in the default operating system location or in a
        custom location based on your organization's requirements. If you install Python 3.8 in a
        custom location, then you must point Cloudera Manager to that location either by creating a
        symbolic link or by adding an environment variable to the Cloudera Manager Agent systemd
        service definition file. 
noteIf the standard package is not available, you must follow the steps below to install a
        custom Python 3.8 package.
notePython 3.8 is also required for using the Hue service on CDP 7.1.8
        and higher. You do not need to install Python 3.8 separately on Hue hosts on SLES 15
        operating systems. If you choose a custom installation location in the steps below and do
        not configure alternatives, then prepend the path to the custom bin directory in Cloudera Manager > Clusters > Hue > Configuration > Hue Service Environment Advanced Configuration Snippet (Safety
            Valve) separated by colon (:) as follows:Key:
            PATHValue:
              [***CUSTOM-INSTALL-PATH***]/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/bin


Installing the standard Python 3.8 packageInstalling a custom Python 3.8 package
Perform the following steps on all cluster hosts: 
SSH into the host system as a root user.
Run the following command to install Python
                3.8:zypper install python3.8
Verify the Python version as
                follows:python3.8 -â€“version
You have completed the Python installation. Skip the remaining steps on this page.
          

Before installing Python 3.8, you must install the necessary developer tools and
            packages such as gcc, make, Openssl-devel, Bzip2-devel, Libffi-devel, and Zlib-devel.
            Run the following command on all cluster hosts to install the necessary
            dependencies:zypper install gcc openssl-devel bzip2-devel libffi-devel zlib-devel make libbz2-devel gzip
You may install the custom Python 3.8 package in the standard location, or if required
            by your organization, in a custom location. Note that some commands are different
            depending on this choice. If using a custom location, substitute the custom location
            wherever you see [***CUSTOM-INSTALL-PATH**] in the
            instructions. 
Perform the following steps on all cluster hosts: 

SSH into the host system as a root user.
Download Python 3.8 and decompress the package by running the following
              commands:cd /opt
curl -O https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgztar -zxvf Python-3.8.12.tgz
Change directory to where you decompressed the Python 3.8
              package:cd Python-3.8.12.tgz
Run one of the following command to start installing Python 3.8:
If you are installing to the standard location, run the following command
                  ./configure --enable-shared
If you are installing to a custom location, run the following
                  command:./configure --enable-shared --prefix=[***CUSTOM-INSTALL-PATH***]
importantBy default, Python can be installed
                in any one of the following locations:
/usr/bin
/usr/local/python38/bin
/usr/local/bin
If you are installing Python 3.8 in any other location, then you must
                  specify the path using the --prefix option.The
                    --enabled-shared option is used to build a shared library
                  instead of a static library.
Build Python 3.8 as follows:
Run the make command to compile the
                  files:make
Run the following command to place the compiled files in the default location or
                  in the custom location that you specified using the --prefix
                  option:make altinstall
Copy the shared compiled library files (libpython3.8.so) to the
                    /lib64/
                  directory:cp --no-clobber ./libpython3.8.so* /lib64/
                  The --no-clobber option is used to prevent overwriting of
                  files.
Change the permissions of the libpython3.8.so files as
                  follows:chmod 755 /lib64/libpython3.8.so*

If you see the error while loading shared libraries:
                libpython3.8.so.1.0: cannot open shared object file: No such file or
                directory error, then run the following command:
              export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/




Parent topic: Installing Python 3.8 for Cloudera Manager 7.7.3