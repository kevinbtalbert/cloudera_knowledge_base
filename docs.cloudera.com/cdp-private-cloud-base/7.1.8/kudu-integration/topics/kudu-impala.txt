Understanding Impala integration with KuduCloudera Docs
Understanding Impala integration with Kudu
Apache Kudu has tight integration with Apache Impala. Before you start using Impala to
      query Kudu tables, learn about the Impala database containment model and Impala tables, and
      read about the limitations of the integration.
The tight integration between Impala and Kudu allows you to use Impala to insert, query,
         update, and delete data from Kudu tablets using Impala's SQL syntax, as an alternative to
         using the Kudu APIs to build a custom Kudu application. In addition, you can use JDBC or
         ODBC to connect existing or new applications written in any language, framework, or
         business intelligence tool to your Kudu data, using Impala as the broker.

Impala database containment modelEvery Impala table is contained within a namespace called a database. The default       database is called default, and you can       create and drop additional databases as desired.Internal and external Impala tablesWhen creating a new Kudu table using Impala, you can create the table as an internal       table or an external table.Verifying the Impala dependency on KuduIn a Cloudera Manager deployment, once the Kudu service is installed, Impala will     automatically identify the Kudu Master. However, if your Impala queries don't work as expected,     use the following steps to make sure that the Impala service is set to be dependent on     Kudu.Impala integration limitationsHere are the limitations when integrating Kudu with Impala, and list of Impala       keywords that are not supported for creating Kudu tables.