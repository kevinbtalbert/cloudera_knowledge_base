Column designCloudera Docs
Column design
A Kudu table consists of one or more columns, each with a defined type. Columns that
    are not part of the primary key may be nullable. 
Supported
      column types include:

 boolean 


 8-bit signed integer 


 16-bit signed integer 


 32-bit signed integer 


 64-bit signed integer 


date (32-bit days since the Unix epoch)


 unixtime_micros (64-bit microseconds since the Unix epoch) 


 single-precision (32-bit) IEEE-754 floating-point number 


 double-precision (64-bit) IEEE-754 floating-point number 


decimal


varchar


 UTF-8 encoded string (up to 64KB uncompressed) 


 binary (up to 64KB uncompressed) 


VARCHAR type with configurable maximum length (up to 64KB
            uncompressed)


Kudu
      takes advantage of strongly-typed columns and a columnar on-disk storage format to provide
      efficient encoding and serialization. To make the most of these features, columns should be
      specified as the appropriate type, rather than simulating a 'schemaless' table using string or
      binary columns for data which could otherwise be structured. In addition to encoding, Kudu
      allows compression to be specified on a per-column basis. 
noteKudu does not provide a version or timestamp column to track changes to
      a row. If version or timestamp information is needed, the schema should include an explicit
      version or timestamp column. 

Decimal typeThe decimal type is a numeric data     type with fixed scale and precision suitable for financial and other arithmetic calculations     where the imprecise representation and rounding behavior of float and double make those types impractical. The decimal type is also useful for integers larger than int64 and cases with fractional     values in a primary key.Varchar typeThe varchar type is a UTF-8 encoded string (up to 64KB uncompressed)   with a fixed maximum character length. This type is especially useful when migrating from or   integrating with legacy systems that support the varchar type. If a maximum   character length is not required the string type should be used   instead.Column encodingDepending on the type of the column, Kudu columns can be created with the following       encoding types.Column compressionKudu allows per-column compression using the LZ4, Snappy, or zlib compression codecs.Parent topic: Kudu schema design