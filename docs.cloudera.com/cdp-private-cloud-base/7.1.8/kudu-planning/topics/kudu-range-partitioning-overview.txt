Range partitioningCloudera Docs
Range partitioning
Range partitioning distributes rows using a totally-ordered range partition key. Each
    partition is assigned a contiguous segment of the range partition keyspace. The key must be
    comprised of a subset of the primary key columns. If the range partition columns match the
    primary key columns, then the range partition key of a row will equal its primary key. In range
    partitioned tables without hash partitioning, each range partition will correspond to exactly
    one tablet.

          The initial set of range partitions is specified during table creation as a set of
          partition bounds and split rows. For each bound, a range partition will be created in
          the table. Each split will divide a range partition in two. If no partition bounds are
          specified, then the table will default to a single partition covering the entire key
          space (unbounded below and above). Range partitions must always be non-overlapping,
          and split rows must fall within a range partition.
        

Adding and Removing Range PartitionsKudu allows range partitions to be dynamically added and removed from a table at   runtime, without affecting the availability of other partitions. Removing a partition will delete   the tablets belonging to the partition, as well as the data contained in them. Subsequent inserts   into the dropped partition will fail. New partitions can be added, but they must not overlap with   any existing range partitions. Kudu allows dropping and adding any number of range partitions in a   single transactional alter table operation.Parent topic: Partitioning