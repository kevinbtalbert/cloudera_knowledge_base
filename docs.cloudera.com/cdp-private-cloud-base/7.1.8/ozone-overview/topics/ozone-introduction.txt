Introduction to OzoneCloudera Docs
Introduction to Ozone
Apache Ozone is a scalable, redundant, and distributed object store optimized for big
    data workloads. Apart from scaling to billions of objects of varying sizes, applications that
    use frameworks like Apache Spark, Apache YARN and Apache Hive work natively on Ozone object
    store without any modifications.
HDFS works best when most of the files are large but HDFS suffers from small file
      limitations. Ozone is a distributed key-value object store that can manage both small and
      large files alike. Ozone natively supports the S3 API and provides a Hadoop-compatible file
      system interface. Ozone object store is available in a CDP Private Cloud Base deployment.
Ozone storage elements
Ozone consists of the following important storage elements:
VolumesVolumes are similar to accounts. Volumes can
                                                  be created or deleted only by administrators. An
                                                  administrator creates a volume for an organization
                                                  or a team.
BucketsA volume can contain zero or more buckets.
                                                  Ozone buckets are similar to Amazon S3 buckets.
                                                  Depending on their requirements, regular users can
                                                  create buckets in volumes.
KeysEach key is part of a bucket. Keys are unique
                                                  within a given bucket and are similar to S3
                                                  objects. Ozone stores data as keys inside buckets.
                                                

When a client writes a key, Ozone stores the associated data on DataNodes
                                in chunks called blocks. Therefore, each key is associated with one
                                or more blocks. Within a DataNode, multiple unrelated blocks can
                                reside in a storage container. 

Key features of Ozone
Key features of Ozone are:
ConsistencyStrong consistency simplifies application
              design. Ozone object store is designed to provide strict serializability.
Architectural simplicityA simple architecture is easy
              to use and easy to debug when things go wrong. The architecture of Ozone object store
              is simple and at the same time scalable. It is designed to store over 100 billion
              objects in a single cluster.
Layered architectureThe layered file system of Ozone
              object store helps to achieve the scale required for the modern storage systems, . It
              separates the namespace management from block and node management layer, which allows
              users to independently scale on both axes.
Easy recoveryA key strength of HDFS is that it can
              effectively recover from catastrophic events like cluster-wide power loss without
              losing data and without expensive recovery steps. Rack and node losses are relatively
              minor events. Ozone object store is similarly robust in the face of failures.
Open source in ApacheThe Apache Open Source community
              is critical to the success of Ozone object store. All Ozone design and development are
              being done in the Apache Hadoop community.
Interoperability with Hadoop ecosystemOzone object
              store is usable by the existing Apache Hadoop ecosystem and related applications like
              Apache Hive, Apache Spark and traditional MapReduce jobs.



Ozone architectureOzone can be co-located with HDFS with single security and governance policies for easy     data exchange or migration and also offers seamless application portability. Ozone has a     scale-out architecture with minimal operational overheads. Ozone separates management of     namespaces and storage, helping it to scale effectively. The Ozone Manager (OM) manages the     namespaces while the Storage Container Manager (SCM) handles the containers. All the metadata     stored on OM SCM and data nodes are required to be stored in low latency devices like NVME or     SSD.Ozone security architectureApache Ozone is a scalable, distributed, and high performance object store optimized for   big data workloads and can handle billions of objects of varying sizes. Applications that use   frameworks like Apache Spark, Apache YARN and Apache Hive work natively on Ozone without any   modifications. Therefore, it is essential to have robust security mechanisms to secure your   cluster and to protect your data in Ozone.Ozone containersContainers are the fundamental replication unit of Ozone and are managed by the Storage   Container Manager (SCM) service. Containers are big binary units (5 Gb by default) that can   contain multiple blocks. How Ozone manages read operationsThe client requests the block locations corresponding to the key it wants to read. The     Ozone Manager (OM) returns the block locations if the client has the required read     privileges.How Ozone manages write operationsThe client requests blocks from the Ozone Manager (OM) to write a key. OM returns the     Block ID and the corresponding DataNodes for the client to write data.How Ozone manages delete operationsOzone is a consistent object store and hence delete operations in Ozone are synchronous.   When the delete request is complete, Ozone Manager deletes the key from the active namespace and   marks the file for garbage collection.