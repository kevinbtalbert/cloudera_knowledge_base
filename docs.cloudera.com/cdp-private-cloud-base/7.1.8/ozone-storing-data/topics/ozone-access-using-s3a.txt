Access Ozone S3 Gateway using the S3A filesystemCloudera Docs
Access Ozone S3 Gateway using the S3A filesystem
If you want to run Ozone S3 Gateway from the S3A filesystem, you must import the
        required CA certificate into the default Java truststore location on all the client nodes
        for running shell commands or jobs. This is a prerequisite when the S3 Gateway is configured
        with TLS.
S3A relies on the hadoop-aws connector,
            which uses the built-in Java truststore
                ($JAVA_HOME/jre/lib/security/cacerts). To override this truststore,
            you must create another truststore named jssecacerts in the same folder
            as cacerts on all the cluster nodes. When using Ozone S3 Gateway, you
            can import the CA certificate used to set up TLS into cacerts or
                jssecacerts on all the client nodes for running shell commands or
            jobs. Importing the certificate is important because the CA certificate used to set up
            TLS is not available in the default Java truststore, while the
                hadoop-aws connector library trusts only those certificates that
            are present in the built-in Java truststore.note

Ozone S3 Gateway currently does not support ETags and versioning. Therefore,
                        you must disable any configuration related to them when using S3A with Ozone
                        S3 Gateway.
S3A is not supported when the File System Optimization (FSO)
                            ozone.om.enable.filesystem.paths is enabled for
                        Ozone Managers. Note that FSO is enabled by default. Therefore, to use S3A,
                        you must override or set the
                            ozone.om.enable.filesystem.paths property to
                            false in the Cloudera Manager > Clusters  > Ozone service > Configuration > Ozone Service Advanced Configuration Snippet (Safety Valve)
                                for ozone-conf/ozone-site.xml property. After you save the configuration, restart all Ozone
                        Managers for the configuration to take affect.

importantIt is recommended that you use
                    ofs:// to denote the Ozone storage path instead of
                    s3a:// wherever applicable. For example, use
                    ofs://ozone1/vol1/bucket1/dir1/key1 instead of
                    s3a://bucket1/dir1/key1.

Create a truststore named jssecacerts at
                        $JAVA_HOME/jre/lib/security/ on all the cluster nodes
                    configured for S3 Gateway, as specified.


Run keytool to view the associated CA certificate and
                            determine the srcalias from the output of the
                            command.

/usr/java/default/bin/keytool -list -v -keystore [***ssl.client.truststore.location***]



Import the CA certificate to all the hosts configured for S3
                            Gateway.

/usr/java/default/bin/keytool -importkeystore -destkeystore $JAVA_HOME/jre/lib/security/jssecacerts -srckeystore [***ssl.client.truststore.location***] -srcalias [***alias***]





Examples of using the S3A filesystem with Ozone S3 GatewayYou can use the S3A filesystem with Ozone S3 Gateway to perform different Ozone         operations. Configuring Spark access for S3AYou must configure specific properties for client applications such as Spark to         access the Ozone data store using S3A.Configuring Hive access for S3AYou must configure specific properties for client applications such as Hive to access         the Ozone data store using S3A.Configuring Impala access for S3AYou must configure specific properties for client applications such as Impala to         access the Ozone data store using S3A.Parent topic: Using Ozone S3 Gateway to work with storage elements