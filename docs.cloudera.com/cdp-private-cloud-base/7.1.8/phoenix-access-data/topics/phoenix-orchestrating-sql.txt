Using JDBC API with Apache PhoenixCloudera Docs
Using JDBC API with Apache Phoenix
You can create and interact with Apache HBase tables using Phoenix DDL/DML statements
        through its standard JDBC API. Apache Phoenix JDBC driver can be easily embedded in any
        application that supports JDBC.
Apache Phoenix enables you to use the standard JDBC API to create and access Apache HBase
            tables. You can use JDBC APIs with Apache Phoenix instead of native Apache HBase client
            APIs to create tables, insert, and query data.
Apache Phoenix tables have a 1:1 relationship with Apache HBase tables. You can choose to
            create a new table using an Apache Phoenix DDL statement such as CREATE
                TABLE, or create a view on an existing Apache HBase table using the
                VIEW statement.
importantModifying an Apache Phoenix table using Apache HBase native API is
            not supported. Doing this leads to errors, inconsistent indexes, incorrect query
            results, or sometimes to corrupt data. 
To use the Apache Phoenix JDBC driver, you must embed the driver in your application that
            supports JDBC. Apache Phoenix has two kinds of JDBC drivers.
A thick driver communicates directly with Apache HBase. The thick
                    driver, therefore, needs access to all the nodes in the Apache HBase
                    cluster.
A thin driver communicates with Apache HBase through Phoenix Query
                    Server (PQS) and requires access only to PQS. Use the thin driver to connect to
                    PQS through Apache Knox or connect to PQS directly.

In an operational database Data Hub cluster, Data Lake (SDX cluster) provides security
            dependencies such as Apache Knox. Your JDBC URL string would depend on whether you want
            to connect directly or through Apache Knox. Before you try connecting to Apache Phoenix,
            check if you are in the list of allowed users in Apache Ranger allowed to access Apache
            Phoenix and Apache HBase.
Based on whether you want to use the thick or thin driver, you need the JAR files for the
            Apache HBase client, the Apache Phoenix client, and the PQS client.
For the thick driver, you need:

hbase-client-[***VERSION***].jar
hbase-site.xml

noteYou must add the cluster's current hbase-site.xml to the application classpath. You
            can get the hbase-site.xml by doing an SSH to the cluster node with the hbase-gateway
            role. You can copy the hbase-site.xml file from the following path
                /etc/hbase/hbase-site.xml or
                /etc/hbase/conf/hbase-site.xml.
For the thin driver, you need:

phoenix-queryserver-client-[***VERSION***].jar

You can get these JAR files from the following locations:

Go to /opt/cloudera/parcels/CDH/lib/phoenix/ on an operational
                database cluster node with the phoenix-gateway roleor
Download the JAR files from the Cloudera Repository


When using the thin driver, your applications interact with the Phoenix Query Server
            using the Avatica API and Google Protocol Buffers serialization format.
JDBC driver location

Use the /opt/cloudera/parcels/CDH/lib/phoenix/[***PHOENIX
                    VERSION***].jar file present in your deployment location.
            For example,
                /opt/cloudera/parcels/CDH/lib/phoenix/phoenix-5.0.0.7.2.0.0-128-client.jar
URL syntax for the thick JDBC driver
To connect to Apache Phoenix using the thick JDBC driver, you must use the following JDBC
            URL
            syntax:jdbc:phoenix:[***zookeeper_quorum***]:[***zookeeper_port***]:[***zookeeper_hbase_path***]The
                zookeeper_quorum and zookeeper_port parameters are
            optional if you have added the operational database Apache HBase cluster's current
            hbase-site.xml to the application classpath.
Apart from the JDBC driver, the following drivers are supported:

ODBC driver
Python driver for Phoenix


Connecting to Apache Phoenix Query Server using the JDBC clientYou can interact with Apache Phoenix using your client and Apache Phoenix Query         Server (PQS). Connect to Phoenix Query ServerYou can connect to Phoenix Query Server (PQS) using the JDBC thin client without         using a gateway such as Apache Knox. You must use the JDBC URL syntax to form the URL and         connect to PQS.Connect to Phoenix Query Server through Apache KnoxYou can connect to Phoenix Query Server (PQS) using the JDBC thin client through the         Apache Knox gateway. Apache Knox requires your thin client connection to be over HTTPS. Launching Apache Phoenix Thin ClientYou need to launch the Apache Phoenix thin client before connecting to the Phoenix         Query Server (PQS). Learn to use the command that launches the Apache Phoenix thin         client.