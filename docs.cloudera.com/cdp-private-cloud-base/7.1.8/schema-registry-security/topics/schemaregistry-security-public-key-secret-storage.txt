Public key and secret storageCloudera Docs
Public key and secret storage
Learn about public key, private key, and secret in JSON Web Token (JWT). Also learn
    about JSON Web Key (JWK), keystore, and property that Schema Registry supports for storing the
    public key or the secret.
When JWTs are signed with RSA, there is a private and public key pair. The private
      key is located on the OAuth2 server and is hidden from you. Schema Registry uses the public
      key for validating the signature of the JWT token.
When JWTs are signed with HMAC, there is a secret which is shared by all parties. The
      secret is used for signing the token and also for verifying it.
Schema Registry supports the following ways to store the public key or the secret:
JWKJSON Web Key is a data structure that describes a key. When you have
            multiple keys collected in a set, that data structure is named JWKS. A JWKS contains a
            collection of keys.Usually, there is a public web service that exposes
            the JWKS. You can obtain the JWKS through an HTTP request. Other transportation methods
            are possible, for example, the keys can be stored in a file or on a network
            storage.The keys are usually short lived (depending on the provider the
            validity period ranges from one day to one week). For this reason, Schema Registry runs
            a thread every 5 minutes to refresh the keys. The interval can be customized.
KeystoreThe keys can be stored in a Java keystore file. You need to ensure that Schema
      Registry has access to the file and permission to read the key.
PropertyThe public key or secret can be stored directly in Schema Registry. In this case,
      you enter the key in Cloudera Manager and Schema Registry loads it during startup. This option
      is useful when the public key expires rarely and you do not want to depend on an external JWK
      service for managing the keys.


Parent topic: Schema Registry authentication through OAuth2 JWT tokens