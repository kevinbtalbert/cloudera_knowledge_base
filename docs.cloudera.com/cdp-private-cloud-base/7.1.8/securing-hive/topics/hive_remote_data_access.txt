Hive authenticationCloudera Docs
Hive authentication
HiveServer supports authentication of clients using Kerberos or user/password
      validation backed by LDAP.
If you configure HiveServer to use Kerberos authentication, HiveServer acquires a Kerberos
         ticket during startup. HiveServer requires a principal and keytab file specified in the
         configuration. Client applications (for example, JDBC or Beeline) must have a valid
         Kerberos ticket before initiating a connection to HiveServer2. JDBC-based clients must
         include principal=<hive.server2.authentication.principal> in the JDBC
         connection string. For example:
         String url = "jdbc:hive2://node1:10000/default;principal=hive/HiveServerHost@YOUR-REALM.COM"
Connection con = DriverManager.getConnection(url);
         where hive is the principal configured in hive-site.xml
         and HiveServerHost is the host where HiveServer is running.
To start Beeline and connect to a secure HiveServer, enter a command as shown in the
         following example:
beeline -u "jdbc:hive2://10.65.13.98:10000/default;principal=hive/_HOST@CLOUDERA.SITE"

Securing HiveServer using LDAPYou can secure the remote client connection to Hive by configuring HiveServer to use       authentication with LDAP. Client connections to HiveServerYou can use Beeline, a JDBC, or an ODBC connection to       HiveServer.Pluggable authentication modules in HiveServerWhile running in TCP transport mode, HiveServer supports Pluggable Authentication   Modules (PAM). Using Pluggable Authentication Modules, you can integrate multiple authentication   schemes into a single API.JDBC connection string syntaxThe JDBC connection string for connecting to a remote Hive client requires a host,       port, and Hive database name. You can optionally specify a transport type and       authentication.