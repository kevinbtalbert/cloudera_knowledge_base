Integrating MIT Kerberos and Active DirectoryCloudera Docs
Integrating MIT Kerberos and Active Directory
 How to integrate MIT Kerberos and Active Directory in a Cloudera Manager cluster. 

Several different subsystems are involved in servicing authentication requests, including
        the Key Distribution Center (KDC), Authentication Service (AS), and Ticket Granting Service
        (TGS). The more nodes in the cluster and the more services provided, the heavier the traffic
        between these services and the services running on the cluster. 
As a general guideline, Cloudera recommends using a dedicated Active Directory instance
        (Microsoft Server Domain Services) for every 100-200 nodes in the cluster. However, this is
        just a loose guideline. Monitor utilization and deploy additional instances as needed to
        meet the demand. 
By default, Kerberos uses UDP for client/server communication which is typically faster at
        delivering packets than TCP, but does not guarantee delivery. Additionally, using UDP
        packets that get too large are frequently dropped, as is the case when a user is a member of
        a large number of groups. To avoid this problem, force Kerberos to use TCP by modifying the
        Kerberos configuration file (krb5.conf) as follows:
        [libdefaults]
udp_preference_limit = 1
...
This is especially useful if the domain controllers are not on the same subnet as the
        cluster or are separated by firewalls. 
In general, Cloudera recommends setting up the Active Directory domain controller
        (Microsoft Server Domain Services) on the same subnet as the cluster and never over a WAN
        connection which results in considerable latency and affects cluster performance.
Troubleshooting cluster operations when Active Directory is being used for Kerberos
        authentication requires administrative access to the Microsoft Server Domain Services
        instance. Administrators may need to enable Kerberos event logging on the Microsoft Server
        KDC to resolve issues. 
Deleting Cloudera Manager roles or nodes requires manually deleting the associate Active
        Directory accounts. Cloudera Manager cannot delete entries from Active Directory. 


Related informationMapping Kerberos Principals to Short Names
Integrating MIT Kerberos and Active Directory


Prior to release 5.1, clusters managed by Cloudera Manager could not integrate directly
          with a Microsoft Active Directory KDC. Rather, integrating the Cloudera Manager cluster
          with an Active Directory KDC required the additional setup of a local MIT KDC (local,
          meaning in the same subnet as the cluster). 
The steps below can be used for Cloudera Manager clusters prior to release 5.1, or if the
          Active Directory KDC cannot be accessed directly for whatever reason. The setup process
          assumes that: 
An MIT Kerberos KDC is running in the same subnet as the cluster and that a Kerberos
              REALM is local to the cluster
A Microsoft Server Active Directory instance (Microsoft Server Domain Services) is
              running elsewhere on the network, in its own Kerberos realm.
Given these two systems, you can then:


Create principals for all services running on the cluster in the MIT Kerberos realm
              local to the cluster.
Set up one-way cross-realm trust from the MIT Kerberos realm to the Active Directory
              realm, as detailed in Configuring a Local MIT Kerberos Realm to Trust Active
                Directory below.


The result of this setup is that Active Directory principals (users) can authenticate to
          the cluster without needing service principals.



Configuring a Local MIT Kerberos Realm to Trust Active Directory

On the Active Directory Server


Add the local realm trust to Active Directory with this command:

netdom trust YOUR-LOCAL-REALM.COMPANY.COM /Domain:AD-REALM.COMPANY.COM /add /realm /passwordt:<TrustPassword>


Set the proper encryption type with this command:

On Microsoft Windows 2008, 2012, or 2016:
ksetup /SetEncTypeAttr YOUR-LOCAL-REALM.COMPANY.COM <enc_type>
The <enc_type> parameter specifies AES, DES, or RC4 encryption. Refer to
                  the documentation for your version of Windows Active Directory to find the
                  <enc_type> parameter string to use.


Get and verify the list of encryption types set with this command:

On Microsoft Windows 2008, 2012, or 2016:
ksetup /GetEncTypeAttr YOUR-LOCAL-REALM.COMPANY.COM
importantMake sure the encryption type you specify is supported on
                  both your version of Windows Active Directory and your version of MIT Kerberos.
                





On the MIT KDC Server


Type the following command in the kadmin.local or kadmin shell to add the
                cross-realm krbtgt principal. Use the same password you used in the
                  netdom command on the Active Directory Server.

kadmin:  addprinc -e "enc_type_list" krbtgt/YOUR-LOCAL-REALM.COMPANY.COM@AD-REALM.COMPANY.COM
where the enc_type_list parameter specifies the types of
                  encryption this cross-realm krbtgt principal can supportâ€”AES, DES, or RC4. You can
                  specify multiple encryption types using the parameter in the command above, what's
                  important is that at least one of the encryption types corresponds to the
                  encryption type found in the tickets granted by the KDC in the remote realm. For
                  example:
kadmin:  addprinc -e "rc4-hmac:normal des3-hmac-sha1:normal" krbtgt/YOUR-LOCAL-REALM.COMPANY.COM@AD-REALM.COMPANY.COM
noteThe cross-realm krbtgt principal that you add in this step must have at
                    least one entry that uses the same encryption type as the tickets that are
                  issued by the remote KDC. If no entries have the same encryption type, then the
                  problem you will see is that authenticating as a principal in the local realm will
                  allow you to successfully run Hadoop commands, but authenticating as a principal
                  in the remote realm will not allow you to run Hadoop commands.





On All of the Cluster Hosts


Verify that both Kerberos realms are configured on all of the cluster hosts. Note
                that the default realm and the domain realm should remain set as the MIT Kerberos
                realm which is local to the cluster.

[realms]
  AD-REALM.CORP.FOO.COM = {
    kdc = ad.corp.foo.com:88
    admin_server = ad.corp.foo.com:749
    default_domain = foo.com
  }
  CLUSTER-REALM.CORP.FOO.COM = {
    kdc = cluster01.corp.foo.com:88
    admin_server = cluster01.corp.foo.com:749
    default_domain = foo.com
  }


To properly translate principal names from the Active Directory realm into local
                names within Hadoop, you must configure the
                  hadoop.security.auth_to_local setting in the
                  core-site.xml file on all of the cluster machines. The following
                example translates all principal names with the realm
                  AD-REALM.CORP.FOO.COM into the first component of the principal
                name only. It also preserves the standard translation for the default realm (the
                cluster realm).



<property>
  <name>hadoop.security.auth_to_local</name>
  <value>
    RULE:[1:$1@$0](^.*@AD-REALM\.CORP\.FOO\.COM$)s/^(.*)@AD-REALM\.CORP\.FOO\.COM$/$1/g
    RULE:[2:$1@$0](^.*@AD-REALM\.CORP\.FOO\.COM$)s/^(.*)@AD-REALM\.CORP\.FOO\.COM$/$1/g
    DEFAULT
  </value>
</property>


For more information about name mapping rules, see Mapping Kerberos Principals
                    to Short Names.





