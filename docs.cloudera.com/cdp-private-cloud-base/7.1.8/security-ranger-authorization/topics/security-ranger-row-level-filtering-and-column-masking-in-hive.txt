Row-level filtering and column masking in HiveCloudera Docs
Row-level filtering and column masking in Hive
You can use Apache Ranger row-level filters to set access policies for rows in Hive
      tables. You can also use Ranger column masking to set policies that mask data in Hive columns,
      for example to show only the first or last four characters of column data.
noteTo prevent possible data loss, row filtering and
			masking policies must exclude users that run compaction. For more information about
			excluding compaction users from Ranger policies, see Compaction prerequisites in
				Managing Apache Hive. 

Related informationCompaction prerequisitesRow-level filtering in Hive with Ranger policiesRow-level filtering helps simplify Hive queries. By moving the access restriction       logic down into the Hive layer, Hive applies the access restrictions every time data access is       attempted. This helps simplify authoring of the Hive query, and provides seamless       behind-the-scenes enforcement of row-level segmentation without having to add this logic to       the predicate of the query.Dynamic resource-based column masking in Hive with Ranger policiesYou can use Apache Ranger dynamic resource-based column masking capabilities to       protect sensitive data in Hive in near real-time. You can set policies that mask or anonymize       sensitive data columns (such as PII, PCI, and PHI) dynamically from Hive query output. For       example, you can mask sensitive data within a column to show only the first or last four       characters.Dynamic tag-based column masking in Hive with Ranger policiesWhere Ranger resource-based masking policy for Hive anonymizes data from a Hive column       identified by the database, table, and column, Ranger tag-based masking policy anonymizes Hive       column data based on tags and tag attribute values associated with Hive column (usually       specified as metadata classification in Atlas).Parent topic: Resource-based Services and Policies