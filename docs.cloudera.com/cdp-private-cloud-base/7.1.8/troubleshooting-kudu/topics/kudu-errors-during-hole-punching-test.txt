Errors during hole punching testCloudera Docs
Errors during hole punching test
Kudu requires hole punching capabilities in order to be efficient. Hole punching
    support depends upon your operation system kernel version and local filesystem
    implementation.


              RHEL or CentOS 6.4 or later, patched to kernel version of 2.6.32-358 or later.
              Unpatched RHEL or CentOS 6.4 does not include a kernel with support for hole
              punching.
            



              Ubuntu 14.04 includes version 3.13 of the Linux kernel, which supports hole
              punching.
            



              Newer versions of the ext4 and xfs filesystems support hole punching. Older
              versions that do not support hole punching will cause Kudu to emit an error
              message such as the following and to fail to start:
Error during hole punch test. The log block manager requires a
filesystem with hole punching support such as ext4 or xfs. On el6,
kernel version 2.6.32-358 or newer is required. To run without hole
punching (at the cost of some efficiency and scalability), reconfigure
Kudu with --block_manager=file. Refer to the Kudu documentation for more
details. Raw error message follows.


note
 ext4 mountpoints may actually be backed by ext2 or ext3 formatted devices, which do not
          support hole punching. The hole punching test will fail when run on such filesystems.
          There are several different ways to determine whether an ext4 mountpoint is backed by an
          ext2, ext3, or ext4 formatted device. See the Stack
            Exchange post for more details. 

          Without hole punching support, the log block manager is unsafe to use. It won’t ever
          delete blocks, and will consume ever more space on disk.
        
          If you can’t use hole punching in your environment, you can still try Kudu. Enable
          the file block manager instead of the log block manager by adding the
          --block_manager=file flag to the commands you use to start the master
          and tablet servers. The file block manager does not scale as well as the log block
          manager.
        note

            The file block manager is known to scale and perform poorly, and should only be used
            for small-scale evaluation and development, and only on systems where hole punching
            is unavailable.
          
 The file block manager uses one file per block. As multiple blocks are written for each
          rowset, the number of blocks can be very high, especially for actively written tablets.
          This can cause performance issues compared to the log block manager even with a small
          amount of data. And it is impossible to switch between block managers without wiping and
          reinitializing the tablet servers. 

Parent topic: Issues starting or restarting the master or the tablet server