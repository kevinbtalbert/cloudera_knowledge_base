About using HueCloudera Docs
About using Hue
Hue provides a one-stop querying experience in Cloudera Data
            Platform (CDP) tthat leverages Hive and Impala SQL queries.
Accessing and using HueGet started using Hue by analyzing and visualizing your data with Impala and Hive SQL         query engines.Viewing Hive query historyThe Job Browser page displays all the queries that were run on the Hive Virtual         Warehouse from various query interfaces, such as Beeline, Hive Warehouse Connector (HWC),         Tableau, and so on.Viewing Hive query informationThe Query Info tab provides information such as, the Hive query ID, the user who         executed the query, the start time, the end time, the total time taken to execute the query,         the tables that were read and written, application ID, Directed Acyclic Graph (DAG) IDs,         session ID, LLAP app ID, thread ID, and the queue against which the query was         run.Viewing explain plan for a Hive queryThe Visual Explain feature provides a graphical representation of the query execution         plan. The Explain plan is read from right to left. It provides details about every stage of         query execution.Viewing Hive query timelineThe Timeline tab provides a visual representation of Hive performance logs and shows         the time taken by each stage of the query execution.Viewing configurations for a Hive queryThe Query Config tab provides the configuration properties and settings that are used         in a Hive query. You can use this tab to verify that configuration property values align         with your expectations.Viewing DAG information for a Hive queryDirected Acyclic Graph (DAG) is created by the Hive engine every time you query the         Hive Virtual Warehouse. The Hive SQL queries are compiled and converted into a Tez execution         graph also known as a DAG. DAG is a collection of vertices where each vertex executes a         fragment of the query or script. Hue provides a web interface to view detailed information         about DAGs.Comparing Hive queries in HueYou can compare two queries to know how each query is performing in terms of speed         and cost-effectiveness. Hue compares various aspects of the two queries, based on which you         can identify what changed between the executions of those two queries, and you can debug         performance-related issues between different runs of the same query.Terminating Hive queriesIf a query is running for longer than expected, or you have accidentally triggered         it, then you can stop the query to free up the resources. Hue also allows you to stop         multiple queries at once.Using SQL to query HBase from HueHue provides a simple SQL interface to create and manipulate SQL tables that are stored   in HBase, and define and   manipulate   views on HBase tables using Apache Phoenix in addition to HBase shell and database   API.Querying existing HBase tablesTo use SQL for querying data from existing HBase tables, you must create a view in   Phoenix pointing to the HBase table.Enabling the SQL editor autocompleterAutocompleter provides finely tuned SQL suggestions for Hive and Impala     dialects while you enter queries into the editor window. See Brand new Autocompleter for Hive and       Impala in the Hue blog.Using governance-based data discoveryHue can use the metadata tagging, indexing, and search features available in Apache     Atlas data management. After integrating Hue with Atlas,  classifications and indexed entities     can be accessed and viewed in Hue. This topic shows you how to     use metadata classifications in Hue.Supported non-ASCII and special characters in HueAuto-generated files may often introduce non-alphanumeric characters in the file and   directory names that Hue does not support. This might cause the files or directories to not appear   on the Hue File Browser. Review the list of non-alphanumeric, non-ASCII, diacritics (accents)   characters supported in Hue for the following operations: upload, create, list in folder, view,   and rename.Options to rerun Oozie workflows in HueOozie workflows consume time and resources to run. You can optimize the rerun of a   failed Oozie workflow by selecting one of the following two options: “All or skip successful” or   “Only failed”. These options enable you to select individual actions within your workflow that you   want to rerun.Options to restart the Hue serviceRestarting the Hue service is necessary after upgrading CDP or making configuration   changes to Hue. You can restart Hue in regular or rolling restart mode. Rolling restart reduces   the service downtime to approximately 80 to 90 seconds.