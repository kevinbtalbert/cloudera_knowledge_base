Use CgroupsCloudera Docs
Use Cgroups
You can use strict cgroups CPU limits to constrain CPU processes in mixed workload
      clusters.
One example of a mixed workload is a cluster that runs both MapReduce and Storm-on-YARN. MapReduce is not CPU-constrained (MapReduce containers do not ask for much CPU). Storm-on-YARN is CPU-constrained: its containers ask for more CPU than memory. As you start adding Storm jobs along with MapReduce jobs, the DRF scheduler attempts to balance memory and CPU resources, but as more CPU-intensive Storm jobs are added, they may begin to take up the majority of the cluster CPU resources.
You can use cgroups along
         with CPU scheduling to help manage mixed workloads. cgroups provide isolation for CPU-heavy
         processes such as Storm-on-YARN, thereby enabling you to predictably plan and constrain the
         CPU-intensive Storm containers.
When you enable strict
         cgroup CPU limits, each resource gets only what it asks for, even if there is extra CPU
         available. This is useful for scenarios involving charge-backs or strict SLA enforcement,
         where you always need to know exactly what percentage or CPU is being used.
Also, enabling strict CPU limits would make job performance predictable, whereas without setting strict limits a CPU-intensive job would run faster when the cluster was not under heavy use, but slower when more jobs were running in the cluster. Strict CPU limits would therefore also be useful for benchmarking.
You can also use partitions
         in conjunction with cgroups and CPU scheduling to restrict Storm-on-YARN jobs to a subset
         of cluster nodes.
If you are using cgroups and
         want more information on CPU performance, you can review the statistics available in the
            /cgroup/cpu/yarn/cpu.stat file.

Parent topic: Limit CPU usage with Cgroups