Configuring a Local Package RepositoryCloudera Docs
Configuring a Local Package Repository

You can create a package repository for Cloudera Manager either by hosting an internal web
      repository or by manually copying the repository files to the Cloudera Manager Server host for
      distribution to Cloudera Manager Agent hosts.noteThis internal web
        repository can also be used when your Cloudera Manager server or cluster does not have
        access to internet. You must download the installable separately from archive.cloudera.com and place the installable in the internal
      repository.

Loading Filters ...


7.7.1 7.6.7 7.6.1
          7.5.1 7.4.4 7.3.1 7.2.4 7.1.4 7.1.3 7.1.2 7.1.1 7.0.3 5.16 5.15 5.14
          5.13

5.16 5.15 5.14 5.13
7.1.8 7.1.7.1000 7.1.7 7.1.6 7.1.5
          7.1.4 7.1.3 7.1.2 7.1.1
7.1.7.2000
7.7.1 7.6.7 7.6.1
          7.5.1 7.4.4 7.4.3 7.3.1 7.2.4 7.1.4 7.1.3 7.1.2
          7.1.1


importantSelect a supported operating system for the versions of Cloudera
          Manager or CDH that you are downloading. See CDH and Cloudera Manager Supported Operating
            Systems. 



noteCloudera Manager 7.7.3 should only be used when
          you need to use Python 3.8 for the Cloudera Manager agents. You must install Python 3.8 on
          all hosts before installing or upgrading to Cloudera Manager 7.7.3. Cloudera Manager
          7.7.3-CHF4 supports only RHEL 8.4, RHEL 8.6, RHEL 7.9, and SLES 15 SP4. See the CDP Private Cloud Base Installation Guide for more
          information.


warningUpgrades from Cloudera Manager 5.12 and lower to
          Cloudera Manager 7.1.1 or higher are not supported 


importantUpgrading Cloudera Manager to version 7.7.1 or
          higher from clusters where CDH 5.x is deployed is not supported. To
          upgrade such clusters: 
Upgrade Cloudera Manager to version 6.3.4.
Upgrade CDH to version 6.3.4
Upgrade Cloudera Manager to version 7.6.5 or higher 



warningFor upgrades from CDH clusters with Cloudera
          Navigator to Cloudera Runtime 7.1.1 (or higher) clusters where
          Navigator is to be migrated to Apache Atlas, the cluster must have
          Kerberos enabled before upgrading. 


warningBefore upgrading CDH 5 clusters with Sentry to Cloudera Runtime 7.1.x
        clusters where Sentry privileges are to be transitioned to Apache Ranger:
The cluster must have Kerberos enabled. 
Verify that HDFS gateway roles exist on the hosts that runs the Sentry service. 

importantIf HDFS ACL sync is enabled (hdfs_sentry_sync_enable=true) on the CDH
        cluster, then you must install Ranger RMS to support the same functionality. For steps to
        install Ranger RMS, see Installing Ranger RMS. 


noteIf the cluster you are upgrading will include Atlas, Ranger, or
          both, the upgrade wizard deploys one infrastructure Solr service to
          provide a search capability of the audit logs through the Ranger Admin
          UI and/or to store and serve Atlas metadata. Cloudera recommends that
          you do not use this service for customer workloads to avoid
          interference with audit and timeline performance. 




Creating a Permanent Internal Repository

The following sections describe how to create
        a permanent internal repository using Apache HTTP Server:


Setting Up a Web server

To host an internal repository, you must install or use an existing
          Web server on an internal host that is reachable by the Cloudera
          Manager host, and then download the repository files to the Web server
          host. The examples in this section use Apache HTTP Server as the Web
          server. If you already have a Web server in your organization, you can
          skip to Downloading and publishing the package repository for Cloudera Manager.

Install Apache HTTP Server:
RHEL / CentOS

sudo yum install httpd

SLES

sudo zypper install httpd

Ubuntu

sudo apt-get install httpd


Start Apache HTTP Server:
RHEL 7, 8

sudo systemctl start httpd

SLES 12, Ubuntu 16 or later

sudo systemctl start apache2







Downloading and publishing the package repository for Cloudera Manager


Download the package repository for the product you want to install:
Cloudera Manager 7

Do the following steps to download the files for a Cloudera Manager
                    release:

Run the following command to create a local repository directory to hold the
                      Cloudera package
                      repository:sudo mkdir -p /var/www/html/cloudera-repos/cm7
Run the following command to download the repository tarball for your
                      operating
                      system:wget https://[username]:[password]@archive.cloudera.com/p/cm7/7.0.3/repo-as-tarball/cm7.0.3-redhat7.tar.gz
Run the following command to unpack the tarball into the local repository
                      directory:tar xvfz cm7.0.3-redhat7.tar.gz -C /var/www/html/cloudera-repos/cm7 --strip-components=1
Run the following command to modify the file permission that allows you to
                      download the files under the local repository
                      directory:sudo chmod -R ugo+rX /var/www/html/cloudera-repos/cm7



Visit the Repository URL
              http://<web_server>/cloudera-repos/ in your
            browser and verify the files you downloaded are present.importantIf you do not see the list of downloaded files in your web
              browser, then you might have been configured not to display indexes. Verify your web
              browser settings.

importantInclude the allkeys.asc
          file at the top level of the package repository. The allkeys.asc file
          is included in the repo-as-tarball file. Ensure to include
            allkeys.asc file, if you are manually copying the package files
          between hosts.The allkeys.asc file is used to validate the
            signatures of the package files during host installation. If
              allkeys.asc file is not available in the repository, then you
            cannot add a host in the Cloudera Manager.




Creating a Temporary Internal Repository

You can quickly create a temporary remote repository to deploy packages
        on a one-time basis. Cloudera recommends using the same host that runs
        Cloudera Manager, or a gateway host. This example uses Python SimpleHTTPServer as the
        Web server to host the /var/www/html directory, but you
        can use a different directory.

Download the repository you need following the instructions in Downloading and publishing the package repository for Cloudera Manager.
Determine a port that your system is not listening on. This example
          uses port 8900.
Start a Python SimpleHTTPServer in the
            /var/www/html
          directory:cd /var/www/html
python -m SimpleHTTPServer 8900Serving HTTP on 0.0.0.0 port 8900 ...
Visit the Repository URL http://<web_server>:8900/cloudera-repos/
          in your browser and verify the files you downloaded are present.




Configuring Hosts to Use the Internal Repository


After establishing the repository, modify the client configuration to
          use it: 


OS
Procedure



RHEL compatible
Create
                    /etc/yum.repos.d/cloudera-repo.repo files
                  on cluster hosts with the following content, where
                    <web_server> is the hostname of the
                  Web
                  server:[cloudera-repo]
name=cloudera-repo
baseurl=http://<web_server>/cm/5
enabled=1
gpgcheck=0 


SLES
Use the zypper utility to update client
                  system repository information by issuing the following
                  command:zypper addrepo http://<web_server>/cm <alias>


Ubuntu
Create
                    /etc/apt/sources.list.d/cloudera-repo.list
                  files on all cluster hosts with the following content, where
                    <web_server> is the hostname of the
                  Web
                  server:deb http://<web_server>/cm <codename> <components>You
                  can find the <codename> and
                    <components> variables in the
                    ./conf/distributions file in the
                    repository.After creating the .list
                    file, run the following
                    command:sudo apt-get update





