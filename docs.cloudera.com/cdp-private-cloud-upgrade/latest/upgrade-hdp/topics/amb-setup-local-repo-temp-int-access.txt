Setting up local repository with temporary internet accessCloudera Docs
Setting up local repository with temporary internet access
You must have completed the Getting Started Setting up a Local Repository
    procedure.
To finish setting up your local repository, complete the
      following:
Install the repository configuration files for Ambari and the Stack on the host.

Confirm repository availability:


For RHEL, CentOS, Oracle or Amazon Linux: yum repolist
For SLES: zypper repos

For Debian and Ubuntu: dpkg-list



Synchronize the repository contents to your mirror server:


Browse to the web server directory:


For RHEL, CentOS, Oracle or Amazon Linux: cd
                  /var/www/html
For SLES: cd /srv/www/htdocs/rpms
For Debain and Ubuntu: cd /var/www/html




For Ambari, create the ambari directory and reposync: mkdir -p
                ambari/<OS>, cd ambari/<OS>, and
                reposync -r Updates-Ambari-7.1.x.x. In this syntax, the value of
              <OS> is amazonlinux2, centos7, sles12, ubuntu16, ubuntu18, or debian9.

importantDue to a known issue in version 1.1.31-2 of the Debian 9
                reposync, we advise using reposync version 11.3.1-3 or above when working on a
                Debian 9 host.



For Hortonworks Data Platform (HDP) stack repositories, create the hdp directory
              and reposync: mkdir -p hdp/<OS>, cd
                hdp/<OS>, and reposync -r HDP-<latest.version>,
              and reposync -r HDP-UTILS-<version>.


For HDF Stack Repositories, create an hdf directory and reposync. mkdir -p
                hdf/<OS>, cd hdf/<OS>, and reposync -r
                HDF-<latest.version>.



Generate the repository metadata:


For Ambari: createrepo
                <web.server.directory>/ambari/<OS>/Updates-Ambari-7.1.x.x

For HDP Stack Repositories: createrepo
                <web.server.directory>/hdp/<OS>/HDP-<latest.version> createrepo
                <web.server.directory>/hdp/<OS>/HDP-UTILS-<version> 
For HDF Stack Repositories: createrepo
                <web.server.directory>/hdf/<OS>/HDF-<latest.version>



Confirm that you can browse to the newly created repository:


Ambari Base URL
                http://<web.server>/ambari/<OS>/Updates-Ambari-7.1.x.x
HDF Base URL
                http://<web.server>/hdf/<OS>/HDF-<latest.version>
HDP Base URL
                http://<web.server>/hdp/<OS>/HDP-<latest.version>
HDP-UTILS Base URL
                http://<web.server>/hdp/<OS>/HDP-UTILS-<version>Where:
                

<web.server> – The FQDN of the web server host 


<version> – The Hortonworks stack version number 


<OS> – centos7, sles12, ubuntu16, ubuntu 18, or debian9
                  



importantBe sure to record these Base URLs. You need them when you are
            installing Ambari and the Cluster. 

Optional. If you have multiple repositories configured in your
          environment, deploy the following plug-in on all the nodes in your cluster.


Install the plug-in. For RHEL/CentOS/Oracle 7: yum install
                yum-plugin-priorities



Edit the
                /etc/yum/pluginconf.d/priorities.conf file to
              add the following: [main] enabled=1 gpgcheck=0



Parent topic: Setting up a local repository