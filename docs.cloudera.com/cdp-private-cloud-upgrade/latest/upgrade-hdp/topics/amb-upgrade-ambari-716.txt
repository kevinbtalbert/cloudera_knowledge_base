Upgrade to Ambari 7.1.x.0Cloudera Docs
Upgrade to Ambari 7.1.x.0
After reviewing the information related to Ambari UI and the Quick Links, and backing
        up the Ambari Server configuration file, perform the recommended steps for upgrading
        Ambari.Upgrade to Ambari

Loading Filters
        ...




Parent topic: Upgrading Ambari
Upgrade to Ambari 7.1.7 SP2 (7.1.7.2000-3)
After reviewing the information related to Ambari UI and the Quick Links, and backing
            up the Ambari Server configuration file, perform the recommended steps for upgrading
            Ambari.

Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                        Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                        Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                        Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                        su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade script
                                            for CentOS 7: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/centos7/tars/ambari/ambari-metrics-pre-upgrade-7.1.7.2000.3.tar.gz
Execute the following command
                                            to download the pre-upgrade script for Ubuntu 18: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/ubuntu18/tars/ambari/ambari-metrics-pre-upgrade-7.1.7.2000.3.tar.gzExecute the following command to download the pre-upgrade script
                                            for SLES 12: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/sles12/tars/ambari/ambari-metrics-pre-upgrade-7.1.7.2000.3.tar.gzTo
                                        find all the download links in a centralised location, see
                                            Software download
                                            matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                            ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                        $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                        ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                        $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh




Stop the service.From Ambari Web, browse to Services >
                                Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                        ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql



The default password is: bigdata.noteYou must take a back up of the Ambari
                            database if you have hosted the Ambari database on any other supported
                            databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see the Cloudera Support
                        Matrix. For example, if you are running postgres v9.4, you must
                    upgrade postgres to v9.6 or v10.2. If you are running MariaDB 10.2, upgrading
                    the Ambari Server database is not required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                            repository file to make sure that there are no previous versions of the
                            ambaridc.repo file. If you do not, and a previous version exists, the
                            new download is saved with a numeric extension, such as
                                ambari.repo.1. Make sure that you copy the new
                            version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                                wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/centos7/ambari.repo -O /etc/yum.repos.d/ambari.repo 
For
                                Ubuntu:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/ubuntu18/ambari.list -O /etc/apt/sources.list.d/ambari.list
For
                                Sles:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/sles12/ambari.repo -O /etc/zypp/repos.d/ambari.repo



Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or
                        CentOS:yum clean all
 yum info ambari-server
                        In the information output, visually validate that there is an available
                        version containing "7.1.7.2000"
                        yum upgrade ambari-server
For Ubuntu 18:
                        apt-get clean all Before upgrading Ambari Server, you
                        must update the username and password in the ambari.list file. Run the
                        following command:
                        vi /etc/apt/sources.list.d/ambari.list For example,
                        the output displays the following:
                        #VERSION_NUMBER=7.1.7.2000-3
#json.url = https://archive.cloudera.com/p/HDP/hdp_urlinfo.json
deb https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/ubuntu18 Ambari main                   
apt-get update
apt-cache show ambari-server | grep Version 
                        In the information output, visually validate that there is an available
                        version containing "7.1.7.2000"
                        apt-get upgrade ambari-server
For SLES 12: zypper clean
                        Before upgrading the Ambari Server, you must create, place, and set the
                        credentials for zypper. Run the following command:
                        vi /etc/zypp/repos.d/ambari.repoAdd the following
                        postfix to the end of BaseURL and gpgkey:
                            ?credentials=ambari.cat For example, the output
                        displays the following:
                        #VERSION_NUMBER=7.1.7.2000-3
[ambari-7.1.7.2000]
#json.url = https://archive.cloudera.com/p/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.7.2000
baseurl=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/sles12
gpgcheck=0
gpgkey=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/sles12/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1                    Create
                        the following file with your paywall credentials (replace <username> with
                        your paywall username and <password> accordingly):
                        /etc/zypp/credentials.d/ambari.cat
                        username=<username> 
password=<password>zypper info ambari-server
                        In the information output, visually validate that there is an available
                        version containing "7.1.7.2000"
                        Zypper up ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                            Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                    Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.7.2000.
                                    Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading
                                Ambari Agent, you must update the username and password in the
                                    ambaridc.repo file. Run the following command:
                                vi /etc/yum.repos.d/ambaridc.repo For
                                example, the output displays the following: #VERSION_NUMBER=7.1.7.2000-3
[ambari-7.1.7.2000]
#json.url = https://archive.cloudera.com/p/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.7.2000
baseurl=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/centos7
gpgcheck=1
gpgkey=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.2000/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
yum upgrade ambari-agent 




For Ubuntu:
                    apt-get update 
                        apt-get upgrade ambari-agent
 


For SLES: 
                Copy the following files from the server host to each host with the same path:
                        /etc/zypp/credentials.d/ambari.cat
/etc/zypp/repos.d/ambari.repoThen
                        run the following
                        command:zypper up ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agent
For Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                        ambari-server upgrade. When the Ambari Server database
                    schema has been upgraded, you should see command output like this:
                        Ambari Server ‘upgrade’ completed successfully.

Start the Ambari Server. On the host running Ambari Server:
                        ambari-server start

Start all Ambari Agents. On each host in your cluster running an Ambari Agent:
                        ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                    https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                    http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                    setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.A sample command to setup MySQL connector: ambari-server setup
                            --jdbc-db=mysql
                            --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_


Upgrade to Ambari 7.1.7.1
After reviewing the information related to Ambari UI and the Quick Links, and backing
            up the Ambari Server configuration file, perform the recommended steps for upgrading
            Ambari.

Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                        Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                        Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                        Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                        su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade script
                                            for CentOS 7: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/centos7/tars/ambari/ambari-metrics-pre-upgrade-7.1.7.1.14.tar.gz
Execute the following command
                                            to download the pre-upgrade script for Ubuntu 18: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/ubuntu18/tars/ambari/ambari-metrics-pre-upgrade-7.1.7.1.14.tar.gzExecute the following command to download the pre-upgrade script
                                            for SLES 12: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/sles12/tars/ambari/ambari-metrics-pre-upgrade-7.1.7.1.14.tar.gzTo
                                        find all the download links in a centralised location, see
                                            Software download
                                            matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                            ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                        $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                        ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                        $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh




Stop the service.From Ambari Web, browse to Services >
                                Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                        ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql



The default password is: bigdata.noteYou must take a back up of the Ambari
                            database if you have hosted the Ambari database on any other supported
                            databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see the Cloudera Support
                        Matrix. For example, if you are running postgres v9.4, you must
                    upgrade postgres to v9.6 or v10.2. If you are running MariaDB 10.2, upgrading
                    the Ambari Server database is not required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                            repository file to make sure that there are no previous versions of the
                            ambaridc.repo file. If you do not, and a previous version exists, the
                            new download is saved with a numeric extension, such as
                                ambari.repo.1. Make sure that you copy the new
                            version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                                wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/centos7/ambari.repo -O /etc/yum.repos.d/ambari.repo 
For
                                Ubuntu:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/ubuntu18/ambari.list -O /etc/apt/sources.list.d/ambari.list
For
                                Sles:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/sles12/ambari.repo -O /etc/zypp/repos.d/ambari.repo



Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or CentOS:yum clean all
yum info ambari-server In the information output,
                        visually validate that there is an available version containing
                            "7.1.7.1" yum upgrade ambari-server
For Ubuntu 18:
                        apt-get clean all Before upgrading Ambari Server, you
                        must update the username and password in the ambari.list file. Run the
                        following command:
                        vi /etc/apt/sources.list.d/ambari.list For example,
                        the output displays the following:
                        #VERSION_NUMBER=7.1.7.1-14
#json.url = https://archive.cloudera.com/p/HDP/hdp_urlinfo.json
deb https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/ubuntu18 Ambari main                   
apt-get update
apt-cache show ambari-server | grep Version 
                        In the information output, visually validate that there is an available
                        version containing "7.1.7.1"
                        apt-get upgrade ambari-server
For SLES 12: zypper clean
                        Before upgrading the Ambari Server, you must create, place, and set the
                        credentials for zypper. Run the following command:
                        vi /etc/zypp/repos.d/ambari.repoAdd the following
                        postfix to the end of BaseURL and gpgkey:
                            ?credentials=ambari.cat For example, the output
                        displays the following:
                        #VERSION_NUMBER=7.1.7.1-14
[ambari-7.1.7.1]
#json.url = https://archive.cloudera.com/p/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.7.1
baseurl=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/sles12
gpgcheck=0
gpgkey=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/sles12/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1                    Create
                        the following file with your paywall credentials (replace <username> with
                        your paywall username and <password> accordingly):
                        /etc/zypp/credentials.d/ambari.cat
                        username=<username> 
password=<password>zypper info ambari-server
                        In the information output, visually validate that there is an available
                        version containing "7.1.7.1"
                        Zypper up ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                            Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                    Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.7.1. Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading
                                Ambari Agent, you must update the username and password in the
                                    ambaridc.repo file. Run the following command:
                                vi /etc/yum.repos.d/ambaridc.repo For
                                example, the output displays the following: #VERSION_NUMBER=7.1.7.1-14
[ambari-7.1.7.1]
#json.url = https://archive.cloudera.com/p/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.7.1
baseurl=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/centos7
gpgcheck=1
gpgkey=https://archive.cloudera.com/p/ambaridc/7.x/7.1.7.1/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
yum upgrade ambari-agent 




For Ubuntu:
                    apt-get update 
                        apt-get upgrade ambari-agent
 


For SLES: 
                Copy the following files from the server host to each host with the same path:
                        /etc/zypp/credentials.d/ambari.cat
/etc/zypp/repos.d/ambari.repoThen
                        run the following
                        command:zypper up ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agent
For Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                        ambari-server upgrade. When the Ambari Server database
                    schema has been upgraded, you should see command output like this:
                        Ambari Server ‘upgrade’ completed successfully.

Start the Ambari Server. On the host running Ambari Server:
                        ambari-server start

Start all Ambari Agents. On each host in your cluster running an Ambari Agent:
                        ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                    https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                    http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                    setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.A sample command to setup MySQL connector: ambari-server setup
                            --jdbc-db=mysql
                            --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_


Upgrade to Ambari 7.1.6.0
After reviewing the information related to Ambari UI and the Quick Links, and backing
            up the Ambari Server configuration file, perform the recommended steps for upgrading
            Ambari.

Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                        Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                        Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                        Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                        su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade script
                                            for CentOS 7: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/centos7/tars/ambari/ambari-metrics-pre-upgrade-7.1.6.0.38.tar.gz
Execute the following command
                                            to download the pre-upgrade script for Ubuntu 18: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/ubuntu18/tars/ambari/ambari-metrics-pre-upgrade-7.1.6.0.38.tar.gzExecute the following command to download the pre-upgrade script
                                            for SLES 12: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/sles12/tars/ambari/ambari-metrics-pre-upgrade-7.1.6.0.38.tar.gzTo
                                        find all the download links in a centralised location, see
                                            Software download
                                            matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                        ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                        $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                        ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                        $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh




Stop the service.From Ambari Web, browse to Services >
                                Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                        ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql



The default password is: bigdata.noteYou must take a back up of the Ambari
                            database if you have hosted the Ambari database on any other supported
                            databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see the Cloudera Support
                        Matrix. For example, if you are running postgres v9.4, you must
                    upgrade postgres to v9.6 or v10.2. If you are running MariaDB 10.2, upgrading
                    the Ambari Server database is not required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                        repository file to make sure that there are no previous versions of the
                        ambaridc.repo file. If you do not, and a previous version exists, the new
                        download is saved with a numeric extension, such as
                            ambaridc.repo.1. Make sure that you copy the new
                        version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                            wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/centos7/ambaridc.repo -O /etc/yum.repos.d/ambaridc.repo 
For
                            Ubuntu:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/ubuntu18/ambaridc.list -O /etc/apt/sources.list.d/ambaridc.list
For
                            Sles:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/sles12/ambaridc.repo -O /etc/zypp/repos.d/ambari.repo



Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or CentOS:yum clean all
yum info ambari-server In the information output,
                        visually validate that there is an available version containing
                            "7.1.6.0" yum upgrade ambari-server
For Ubuntu 18: apt-get clean all Before upgrading
                    Ambari Server, you must update the username and password in the ambari.list
                    file. Run the following command:
                    vi /etc/apt/sources.list.d/ambaridc.list For example, the
                    output displays the following:
                    #VERSION_NUMBER=7.1.6.0-38
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
deb https://archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/ubuntu18/ Ambari main                       
apt-get update
apt-cache show ambari-server | grep Version 
                    In the information output, visually validate that there is an available version
                    containing "7.1.6.0"
                    apt-get upgrade ambari-server
For SLES 12: zypper clean Before upgrading the Ambari
                    Server, you must create, place, and set the credentials for zypper. Run the
                    following command: vi /etc/zypp/repos.d/ambari.repoAdd
                    the following postfix to the end of BaseURL and gpgkey:
                        ?credentials=ambari.cat For example, the output displays
                    the following:
                    #VERSION_NUMBER=7.1.6.0-38
[ambari-7.1.6.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.6.0
baseurl=https://archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/sles12/
gpgcheck=0
gpgkey=https://archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/sles12/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1                    Create
                    the following file with your paywall credentials (replace <username> with
                    your paywall username and <password> accordingly):
                    /etc/zypp/credentials.d/ambari.cat
                    username=<username> 
password=<password>zypper info ambari-server
                    In the information output, visually validate that there is an available version
                    containing "7.1.6.0" Zypper up ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                            Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                    Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.6.0. Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading Ambari Agent, you must update the
                            username and password in the ambaridc.repo file. Run
                            the following command:
                            vi /etc/yum.repos.d/ambaridc.repo For example,
                            the output displays the following: #VERSION_NUMBER=7.1.6.0-38
[ambari-7.1.6.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.6.0
baseurl=https://archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/centos7/
gpgcheck=1
gpgkey=https://archive.cloudera.com/p/ambaridc/7.x/7.1.6.0/centos7/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
yum upgrade ambari-agent 




For Ubuntu:
                    apt-get update 
                        apt-get upgrade ambari-agent



For SLES: Copy the following files from the server host to each host with the same path:
                        /etc/zypp/credentials.d/ambari.cat
/etc/zypp/repos.d/ambari.repoThen
                        run the following
                        command:zypper up ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agent
For Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                        ambari-server upgrade. When the Ambari Server database
                    schema has been upgraded, you should see command output like this:
                        Ambari Server ‘upgrade’ completed successfully.

Start the Ambari Server. On the host running Ambari Server:
                        ambari-server start

Start all Ambari Agents. On each host in your cluster running an Ambari Agent:
                        ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                    https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                    http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                    setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.A sample command to setup MySQL connector: ambari-server setup
                            --jdbc-db=mysql
                            --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_


Upgrade to Ambari 7.1.4.0
After reviewing the information related to behavioral changes, Ambari UI and the
        Quick Links, and backing up the Ambari Server configuration file, perform the recommended
        steps for upgrading Ambari.
Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                        Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                        Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                        Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                        su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade script
                                            for CentOS 7: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.4.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.4.0.25.tar.gz
Execute the following command
                                            to download the pre-upgrade script for Ubuntu 18: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.4.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.4.0.25.tar.gzExecute the following command to download the pre-upgrade script
                                            for SLES 12: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/sles12/7.x/updates/7.1.4.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.4.0.25.tar.gzTo
                                        find all the download links in a centralised location, see
                                            Software download
                                            matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                        ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                        $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                        ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                        $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh


Ambari Metrics Collector will shut down
                            automatically.


Stop the service.From Ambari Web, browse to Services >
                                Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                        ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql



The default password is: bigdata.noteYou must take a back up of the Ambari
                                database if you have hosted the Ambari database on any other
                                supported databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see Cloudera Support
                        Matrix. For example, if you are running postgres v9.4, you must
                    upgrade postgres to v9.6 or v10.2. If you are running MariaDB 10.2, upgrading
                    the Ambari Server database is not required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                        repository file to make sure that there are no previous versions of the
                        ambaridc.repo file. If you do not, and a previous version exists, the new
                        download is saved with a numeric extension, such as
                            ambaridc.repo.1. Make sure that you copy the new
                        version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                            wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.4.0/ambaridc.repo -O /etc/yum.repos.d/ambaridc.repo 
For
                            Ubuntu:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.4.0/ambaridc.list -O /etc/apt/sources.list.d/ambaridc.list
For
                            Sles:wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/sles12/7.x/updates/7.1.4.0/ambaridc.repo -O /etc/zypp/repos.d/ambari.repo



Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or CentOS:yum clean all
yum info ambari-server In the information output,
                        visually validate that there is an available version containing
                            "7.1.4.0" yum upgrade ambari-server
For Ubuntu 18: apt-get clean all Before upgrading
                    Ambari Server, you must update the username and password in the ambari.list
                    file. Run the following command:
                    vi /etc/apt/sources.list.d/ambaridc.list For example, the
                    output displays the following:
                    #VERSION_NUMBER=7.1.4.0-25
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
deb https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.4.0 Ambari main                       
apt-get update
apt-cache show ambari-server | grep Version 
                    In the information output, visually validate that there is an available version
                    containing "7.1.4.0"
                    apt-get upgrade ambari-server
For SLES 12: zypper clean
                        Before upgrading the Ambari Server, you must create, place, and set the
                        credentials for zypper. Run the following command:
                        vi /etc/zypp/repos.d/ambari.repoAdd the following
                        postfix to the end of BaseURL and gpgkey:
                            ?credentials=ambari.cat For example, the output
                        displays the following:
                        #VERSION_NUMBER=7.1.4.0-25
[ambari-7.1.4.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.4.0
baseurl=https://archive.cloudera.com/p/ambaridc/sles12/7.x/updates/7.1.4.0?credentials=ambari.cat
gpgcheck=1
gpgkey=https://archive.cloudera.com/p/ambaridc/sles12/7.x/updates/7.1.4.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins?credentials=ambari.cat
enabled=1
priority=1
                    Create
                        the following file with your paywall credentials (replace <username> with
                        your paywall username and <password> accordingly):
                        /etc/zypp/credentials.d/ambari.cat
                        username=<username> 
password=<password>zypper info ambari-server
                        In the information output, visually validate that there is an available
                        version containing "7.1.4.0"
                        Zypper up ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                            Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                    Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.4.0. Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading Ambari Agent, you must update the
                            username and password in the ambaridc.repo file. Run
                            the following command:
                            vi /etc/yum.repos.d/ambaridc.repo For example,
                            the output displays the following: #VERSION_NUMBER=7.1.4.0-25
[ambari-7.1.4.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.4.0
baseurl=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.4.0
gpgcheck=1
gpgkey=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.4.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
yum upgrade ambari-agent 




For Ubuntu:
                    apt-get update 
                        apt-get upgrade ambari-agent



For SLES:Copy the following files from the server host to each host with the same path:
                        /etc/zypp/credentials.d/ambari.cat
/etc/zypp/repos.d/ambari.repoThen
                        run the following
                        command:zypper up ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agentFor Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                        ambari-server upgrade. When the Ambari Server database
                    schema has been upgraded, you should see command output like this:
                        Ambari Server ‘upgrade’ completed successfully.

Start the Ambari server from the host running using the following
                command:
ambari-server start

Start all Ambari Agents on each host in your cluster running an Ambari Agent
                using the following command:
ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                    https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                    http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                    setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.A sample command to setup MySQL connector: ambari-server setup
                            --jdbc-db=mysql
                            --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_

 Ambari is ready and upgraded to 7.1.x.




Upgrade to Ambari 7.1.3.0
After reviewing the information related to behavioral changes, Ambari UI and the
        Quick Links, and backing up the Ambari Server configuration file, perform the recommended
        steps for upgrading Ambari.
Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                        Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                        Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                        Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                        su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade script
                                            for CentOS 7: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.3.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.3.0.17.tar.gz
Execute the following command
                                            to download the pre-upgrade script for Ubuntu 18: 
$ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.3.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.3.0.17.tar.gzTo
                                        find all the download links in a centralised location, see
                                            Software download
                                            matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                        ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                        $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                        ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                        $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh


Ambari Metrics Collector will shut down
                            automatically.


Stop the service.From Ambari Web, browse to Services >
                                Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                        ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql



The default password is: bigdata.noteYou must take a back up of the Ambari
                                database if you have hosted the Ambari database on any other
                                supported databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see the Cloudera Support Matrix. For example,
                    if you are running postgres v9.4, you must upgrade postgres to v9.6 or v10.2. If
                    you are running MariaDB 10.2, upgrading the Ambari Server database is not
                    required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                        repository file to make sure that there are no previous versions of the
                        ambaridc.repo file. If you do not, and a previous version exists, the new
                        download is saved with a numeric extension, such as
                            ambaridc.repo.1. Make sure that you copy the new
                        version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                            wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.3.0/
ambaridc.repo -O /etc/yum.repos.d/ambaridc.repo 
For
                            Ubuntu: wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.3.0/
ambaridc.list -O /etc/apt/sources.list.d/ambaridc.list




Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or CentOS:yum clean all
yum info ambari-server In the information output,
                        visually validate that there is an available version containing
                            "7.1.3.0" yum upgrade ambari-server
For Ubuntu 18: apt-get clean all Before upgrading
                    Ambari Server, you must update the username and password in the ambari.list
                    file. Run the following command:
                    vi /etc/apt/sources.list.d/ambaridc.list For example, the
                    output displays the following:
                    #VERSION_NUMBER=7.1.3.0-17
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
deb https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.3.0 Ambari main                       
apt-get update
apt-cache show ambari-server | grep Version 
                    In the information output, visually validate that there is an available version
                    containing "7.1.3.0"
                    apt-get install ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                            Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                    Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.3.0. Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading Ambari Agent, you must update the
                            username and password in the ambaridc.repo file. Run
                            the following command:
                            vi /etc/yum.repos.d/ambaridc.repo For example,
                            the output displays the following: #VERSION_NUMBER=7.1.3.0-17
[ambari-7.1.3.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.3.0
baseurl=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.3.0
gpgcheck=1
gpgkey=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.3.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
yum upgrade ambari-agent 




For Ubuntu:
                                apt-get update 
apt-get install ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agent For Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                        ambari-server upgrade. When the Ambari Server database
                    schema has been upgraded, you should see command output like this:
                        Ambari Server ‘upgrade’ completed successfully.

Start the Ambari server from the host running using the following
                command:
ambari-server start

Start all Ambari Agents on each host in your cluster running an Ambari Agent
                using the following command:
ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                    https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                    http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                    setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.A sample command to setup MySQL connector: ambari-server setup
                            --jdbc-db=mysql
                            --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_

 Ambari is ready and upgraded to 7.1.x.




Upgrade to Ambari 7.1.2.0
After reviewing the information related to behavioral changes, Ambari UI and the
            Quick Links, and backing up the Ambari Server configuration file, perform the recommended
            steps for upgrading Ambari.
Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                    Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                    Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                    Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                            Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                    su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade
                                        script: $ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.2.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.2.0.11.tar.gzTo
                                            find all the download links in a centralised location,
                                            see Software download
                                                matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                    ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                    $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                    ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                    $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh


Ambari Metrics Collector will shut down
                            automatically.


Stop the service.From Ambari Web, browse to Services >
                            Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                    Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                    ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
                        pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql
                    


The default password is: bigdata.noteYou must take a back up of the Ambari
                                database if you have hosted the Ambari database on any other
                                supported databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see the Cloudera Support Matrix. For example,
                    if you are running postgres v9.4, you must upgrade postgres to v9.6 or v10.2. If
                    you are running MariaDB 10.2, upgrading the Ambari Server database is not
                    required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                        repository file to make sure that there are no previous versions of the
                        ambaridc.repo file. If you do not, and a previous version exists, the new
                        download is saved with a numeric extension, such as
                        ambaridc.repo.1. Make sure that you copy the new
                        version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                            wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.2.0/
                                ambaridc.repo -O /etc/yum.repos.d/ambaridc.repo 
For
                            Ubuntu: wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.2.0/
                                ambaridc.list -O /etc/apt/sources.list.d/ambaridc.list
                            



Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or CentOS:yum clean all
           
yum info ambari-server In the information output,
                        visually validate that there is an available version containing
                            "7.1.2.0" yum upgrade ambari-server
For Ubuntu 18: apt-get clean all Before upgrading
                    Ambari Server, you must update the username and password in the ambari.list
                    file. Run the following command:
                    vi /etc/apt/sources.list.d/ambaridc.list For example, the
                    output displays the following:
                    
                        #VERSION_NUMBER=7.1.2.0-11
                        #json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
                        deb https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.2.0 Ambari main                        
                        apt-get update
                        apt-cache show ambari-server | grep Version 
                    In the information output, visually validate that there is an available version
                    containing "7.1.2.0"
                    apt-get install ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                    Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.2.0. Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading
                                Ambari Agent, you must update the username and password in the
                                    ambaridc.repo file. Run the following command:
                                vi /etc/yum.repos.d/ambaridc.repo For
                                example, the output displays the following: #VERSION_NUMBER=7.1.2.0-11
[ambari-7.1.2.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.2.0
baseurl=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.2.0
gpgcheck=1
gpgkey=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.2.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1
yum upgrade ambari-agent 




For Ubuntu:
                    apt-get update 
                        apt-get install ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agent For Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                    ambari-server upgrade. When the Ambari Server database
                    schema has been upgraded, you should see command output like this:
                    Ambari Server ‘upgrade’ completed successfully.

Start the Ambari server from the host running using the following
                    command:
ambari-server start

Start all Ambari Agents on each host in your cluster running an Ambari Agent
                    using the following command:
ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                        setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.A sample command to setup MySQL connector: ambari-server setup
                            --jdbc-db=mysql
                            --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_

 Ambari is ready and upgraded to 7.1.x.




Upgrade to Ambari 7.1.0.0
After reviewing the information related to behavioral changes, Ambari UI and the
        Quick Links, and backing up the Ambari Server configuration file, perform the recommended
        steps for upgrading Ambari.
Turn off Auto Restart from Ambari web UI by browsing to Admin > Service Auto
                    Start. Set Auto-Start Services to
                        Disabled. Click Save. 

If you are running SmartSense in your cluster, stop the service. From Ambari
                    Web, browse to Services > SmartSense and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the
                        Service Actions menu.

If you are running Ambari Metrics in your cluster, put it in Maintenance Mode.
                    Don't stop the service yet. From Ambari Web, browse to Services >
                        Ambari Metrics and select Turn on Maintenance
                        Mode from the Service Actions menu.


Download the pre-upgrade script


SSH into the host running the Metrics Collector. Note, that in
                                    case Ambari Metrics System (AMS) is running in High Availability
                                    mode, there are multiple hosts running the Metrics Collector.
                                    These steps must be done on each Metrics Collector host.
Become the AMS service user. For example, run the following
                                        su command on Linux: $ sudo su -
                                        ams
Change to the /tmp directory.
Execute the following command to download the pre-upgrade
                                        script: $ wget
                                                https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.0.0/tars/ambari/ambari-metrics-pre-upgrade-7.1.0.0.138.tar.gz
To find all the download links in a centralised
                                            location, see Software download matrix




Extract and run the pre-upgrade script


Extract the pre-upgrade tarball: $ tar xvzf
                                        ambari-metrics-pre-upgrade-<version>.tar.gz
Change to the ambari-metrics-pre-upgrade-<version> directory.
                                        $ cd
                                        ambari-metrics-pre-upgrade-<version>
Make the pre-upgrade script executable: $ chmod +x
                                        ams-pre-upgrade-2.6-to-7.x-<version>.sh
Run the pre-upgrade script on all Metrics Collector hosts:
                                        $
                                        ./ams-pre-upgrade-2.6-to-7.x-<version>.sh


Ambari Metrics Collector will shut down
                            automatically.


Stop the service.From Ambari Web, browse to Services >
                                Ambari Metrics and select Stop
                            from the Service Actions menu. 



If you are running Log Search in your cluster, stop the service. From
                    Ambari Web, browse to Services > Log Search and select
                        Stop from the Service Actions
                    menu. Then, select Turn on Maintenance Mode from the Service
                        Actions menu. 

Stop the Ambari Server. On the host running Ambari Server:
                        ambari-server stop


Stop all Ambari Agents. On each host in your cluster running an
                    Ambari Agent: ambari-agent stop. 

Back up your existing Ambari Server database. For example, to back up
                    the default, embedded postgres db for Ambari:  

mkdir /root/backups/
pg_dump -U ambari ambari > /root/backups/ambari-before-upgrade.sql



The default password is: bigdata.noteYou must take a back up of the Ambari
                                database if you have hosted the Ambari database on any other
                                supported databases like MySQL or MariaDB.


Upgrade your Ambari Server database to a current supported version, only if
                    your Ambari Server database version is not supported on the target Ambari
                    version. To verify current supported versions, see the Cloudera Support Matrix. For example,
                    if you are running postgres v9.4, you must upgrade postgres to v9.6 or v10.2. If
                    you are running MariaDB 10.2, upgrading the Ambari Server database is not
                    required. 

See the documentation for your database type and version for specific
                        database upgrade instructions.


Retrieve the new Ambari repo and replace the old repository file with the new
                    repository file on all hosts in your cluster.

importantCheck your current directory before you download the new
                        repository file to make sure that there are no previous versions of the
                        ambaridc.repo file. If you do not, and a previous version exists, the new
                        download is saved with a numeric extension, such as
                            ambaridc.repo.1. Make sure that you copy the new
                        version. 


Select the repository appropriate for your environment from the following
                        list:

For RHEL or CentOS:
                            wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.0.0/
ambaridc.repo -O /etc/yum.repos.d/ambaridc.repo 
For
                            Ubuntu: wget -nv https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.0.0/
ambaridc.list -O /etc/apt/sources.list.d/ambaridc.list




Upgrade Ambari Server. On the host running Ambari Server: 
For RHEL or
                        CentOS:yum clean all
 yum info ambari-server
                        In the information output, visually validate that there is an available
                        version containing "7.1.0.0"
                        yum upgrade ambari-server
For Ubuntu 18:
                        apt-get clean all Before upgrading Ambari Server, you
                        must update the username and password in the ambari.list file. Run the
                        following command:
                        vi /etc/apt/sources.list.d/ambaridc.list For example,
                        the output displays the following:
                        #VERSION_NUMBER=7.1.0.0-138
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
deb https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/ubuntu18/7.x/updates/7.1.0.0 Ambari main                        
apt-get update
apt-cache show ambari-server | grep Version 
                        In the information output, visually validate that there is an available
                        version containing "7.1.0.0"
                        apt-get install ambari-server

Check for upgrade success by noting progress during the Ambari Server
                    installation process you started in Step 10.



As the process runs, the console displays output similar to the
                                following:
Setting up Upgrade Process Resolving
                                            Dependencies > Running transaction check


If the upgrade fails, the console displays output similar to the
                                following:
Setting up Upgrade Process No Packages marked for
                                    Update


A successful upgrade displays output similar to the following:
Updated: ambari-server.noarch 0:7.1.0.0. Complete!




Upgrade all Ambari Agents. On each host in your cluster running an
                    Ambari Agent:


For RHEL or CentOS: Before upgrading
                                Ambari Agent, you must update the username and password in the
                                    ambaridc.repo file. Run the following command:
                                vi /etc/yum.repos.d/ambaridc.repo For
                                example, the output displays the following: #VERSION_NUMBER=7.1.0.0-138
[ambari-7.1.0.0]
#json.url = http://public-repo-1.hortonworks.com/HDP/hdp_urlinfo.json
name=ambari Version - ambari-7.1.0.0
baseurl=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.0.0
gpgcheck=1
gpgkey=https://[***USERNAME***]:[***PASSWORD***]@archive.cloudera.com/p/ambaridc/centos7/7.x/updates/7.1.0.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins
enabled=1
priority=1

yum upgrade ambari-agent 




For Ubuntu:
                    apt-get update 
                        apt-get install ambari-agent


 After the upgrade process completes, check each host to make sure the new
                    files have been installed:
For CentOS 7.7: rpm -qa | grep ambari-agent For Ubuntu
                    18: dpkg -l ambari-agent 

Upgrade Ambari Server database schema. On the host running Ambari Server:
                            ambari-server upgrade. When the Ambari Server database
                        schema has been upgraded, you should see command output like this:
                            Ambari Server ‘upgrade’ completed successfully.


noteIf the Ambari-server upgrade fails with the error: NO JSON
                                    Object could be decoded, then you must check
                                    pg_hba.conf.



Start the Ambari server from the host running using the following
                    command:
ambari-server startnoteIf Ambari-server fails to start
                            due to ‘FATAL: role "mapred" does not exist’, then you must note that if
                            an embedded postgres was upgraded, ambari-server setup should be run
                            again.

Start all Ambari Agents on each host in your cluster running an Ambari Agent
                    using the following command:
ambari-agent start

Open Ambari Web UI. Point your browser to the Ambari Web UI: 



When Ambari Server is configured for HTTPS:
                                    https://<your.ambari.server>:8443


When Ambari Server is configured for HTTP:
                                    http://<your.ambari.server>:8080


where <your.ambari.server> is the name of your ambari server
                        host. For example, c7401.ambari.apache.org.
importantRefresh your browser so that it loads the new version of
                        the Ambari Web code. If you have problems, clear your browser cache
                        manually, then restart Ambari Server.


Log in using the Ambari administrator credentials that you have set up. For
                    example, the default name/password is admin/admin. You will see
                    a Restart indicator next to each service after upgrading. Ambari upgrade has
                    modified the configuration properties of your cluster based on the new
                    configuration types and properties being made available for each service with
                    this release of Ambari. Review these changes by comparing the previous
                    configuration with the latest version created by "ambari-upgrade". 

cautionDo not manually restart these services unless future steps
                        in the upgrade guide prompt you to do so. Manually restarting these services
                        may significantly disrupt your upgrade. Ambari will restart each service
                        automatically during the HDP upgrade. 


 If you have configured Ambari to authenticate against an external LDAP or
                    Active Directory, you must re-run ambari-server
                    setup-ldap.

 If you have configured your cluster for Hive, Ranger or Oozie with an external
                    database (Oracle, MySQL or PostgreSQL), you must run the following command to
                    get the JDBC driver jar file in place: ambari-server setup --jdbc-db
                        and --jdbc-driver.
A sample command to setup MySQL connector: ambari-server setup
                        --jdbc-db=mysql
                        --jdbc-driver=/path/to/mysql/mysql-connector-java.jar_

 Ambari is ready and upgraded to 7.1.x.



