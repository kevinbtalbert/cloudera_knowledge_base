Setting up CMA serverCloudera Docs
Setting up CMA server 
 You must create a docker image to run the Clouder Migration Assistant server. You
        can deploy it to any of your cluster nodes or an external node that has visibility to the
        cluster and has at least 1.5 GB of extra memory. ${cloudera.version} here represents the
        AM2CM tool versions such as 2.6.0.0-14 and so on.
Downloading AM2CM tool
Download the latest CMA binaries from https://archive.cloudera.com/am2cm/2.6.0.0/. The supported version of the AM2CM tool is 2.4.1.1 and
                    higher.wget
                    https://archive.cloudera.com/am2cm/${base.version}/tars/am2cm-all-${cloudera.version}.tar.gz
                or curl
                    https://archive.cloudera.com/am2cm/${base.version}/tars/am2cm-all-${cloudera.version}.tar.gz
                    --output am2cm-all-${cloudera.version}.tar.gz
Extract and unzip the AM2CM file: tar xzf am2cm-all-${cloudera.version}.tar.gz

Starting CMA server
After extracting the compressed file, there are two ways to start the CMA server - in
                docker container or locally.

Starting CMA server in Docker Container
Run the cma-docker.sh script in the untarred top-level folder to
                launch the CMA server in a docker container.
                    am2cm-${cloudera.version}/bin/cma-docker.sh --startnoteThe
                    script will automatically create the docker image if necessary. Additionally,
                    the script provides the following operations to manage the CMA docker container:
                    start, stop, restart, or rebuild. If you want to explore other available
                    options, run the following command:
                        am2cm-${cloudera.version}/bin/cma-docker.sh
                    --help.
Starting CMA server locally
Ensure that Python 3.8 or later is installed on the host.
Run the cma-local.sh script in the untarred top-level folder and
                follow its instructions to launch the CMA server locally.
                    am2cm-${cloudera.version}/bin/cma-local.sh --startnoteThe
                    script will create a python virtual environment in the top-level folder where
                    the dependencies will be installed. Additionally, the script provides the
                    following operations to manage the CMA locally: start, stop, restart, or
                    rebuild. If you want to explore other available options, run the following
                    command: am2cm-${cloudera.version}/bin/cma-local.sh --help.
After the AM2CM server starts, open http://localhost:8090in a browser. Cloudera Migration
                Assistant (CMA) Server opens.

 This confirms that Cloudera Migration Assistant (CMA) Server is successfully
                installed.


