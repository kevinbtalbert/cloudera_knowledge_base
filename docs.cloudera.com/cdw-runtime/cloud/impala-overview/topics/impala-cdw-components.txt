Components of ImpalaCloudera Docs
Components of Impala
The Impala service is a distributed, massively parallel processing (MPP) database
  engine. It consists of different daemon processes called as components. This topic describes the
  different roles these components play for a selected Virtual Warehouse.
When you create an Impala Virtual Warehouse, it is automatically optimized for your workload by
   the Cloudera Data Warehouse (CDW) service. Due to the containerized and compute-isolated
   architecture of CDW, as well as intelligence to assign different default configurations, you do
   not have to customize your environment to optimize performance or to avoid resource usage spikes
   and out-of-memory conditions. However, if you must adjust some settings to suit your needs after
   creating an Impala Virtual Warehouse, you can add particular component configuration details in
   one of the free-form fields on the SIZING AND SCALING tab or under one of the components
   available under the CONFIGURATIONS tab for a selected Virtual Warehouse.

Before making any configuration changes, you can review the default configuration details in
   the components available under the CONFIGURATIONS tab in a Virtual Warehouse.
Impala service in CDW consists of the following different daemon processes.


Impala catalogd


Impala coordinator


Impala executor


Impala statestored


Impala autoscaler


Impala proxy




Components available for setting the configuration

This section provides reference information on supported configuration properties under the
      listed components. For the full list of configuration properties, see Impala Properties in
      Cloudera Runtime. Based on the information provided under the components, choose the
      appropriate component/role to tune a configuration if you must.

noteSome of the configuration properties under these components can be tuned to your needs
       and some of the properties are not editable. In addition, the available properties may differ
       by CDW Impala Runtime version.

Impala catalogd
The Catalog Server relays the metadata changes from Impala SQL statements to all the Impala
     daemons in a cluster. The catalog service avoids the need to issue REFRESH and INVALIDATE
     METADATA statements when the metadata changes are performed by statements issued through
     Impala.
Impala coordinator
A few of the key functions that an Impala coordinator performs are:



Reads and writes to data files.


Accepts queries transmitted from the impala-shell command, Hue, JDBC, or
         ODBC.


Parallelizes the queries and distributes work across the cluster.



It is in constant communication with StateStore, to confirm which executors are healthy and
      can accept new work. Based on the health information it receives it assigns tasks to the
      executors. It also receives broadcast messages from the Catalog Server daemon whenever a
      cluster creates, alters, or drops any type of object, or when an INSERT or LOAD DATA statement
      is processed through Impala. It also communicates to Catalog Server daemon to load table
      metadata.
Impala executor
A few of the key functions that an Impala executor performs are:



Executes the queries and transmits query results back to the central
         coordinator.


Also transmits intermediate query results.



Depending on the size and the complexity of your queries you can select the number of
      executor nodes that are needed to run a typical query in your workloads. For more information
      on the executor groups and recommendations on sizing your virtual warehouse to handle queries
      that must be run in your workloads concurrently, see Impala auto-scaling on public clouds.
Impala statestored

The Impala StateStore checks on the health of all Impala daemons in a cluster, and
      continuously relays its findings to each of those daemons. If an Impala daemon goes offline
      due to hardware failure, network error, software issue, or other reason, the StateStore
      informs all the other Impala daemons so that future queries can avoid making requests to the
      unreachable Impala daemon.
Components available for diagnostic purpose only

The following components are read-only, and available only to view for diagnostic purposes.
      The properties listed under them are not tunable.
Impala autoscaler

One of the core Impala Virtual Warehouse components is Impala autoscaler. Impala autoscaler
      is in constant communication with coordinators and executors to determine when more or fewer
      compute resources are needed, given the incoming query load. When the autoscaler detects an
      imbalance in resources, it sends a request to the Kubernetes framework to increase or decrease
      the number of executor groups in the Virtual Warehouse, thereby right-sizing the amount of
      resources available for queries. This ensures that workload demand is met without wasting
      cloud resources.
Impala proxy
Impala Proxy is a small footprint reverse proxy that will forward every http client request to the Coordinator endpoint.
When you create an Impala warehouse with the 'allow coordinator shutdown' option a proxy
      'impala proxy' is created to act as a connection endpoint to the impala clients. This option
      when enabled allows Impala coordinators to automatically shut down during idle periods. If the
      coordinator has shut down because of idle period, and if there is a request from a client when
      the coordinator is not running, impala proxy triggers the coordinator to start. So the proxy
      acts as a layer between the clients and the coordinator so that the clients connected to the
      VW do not time out when the coordinator starts up.


