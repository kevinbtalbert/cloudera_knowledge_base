Introduction to Materialized ViewsCloudera Docs
Introduction to Materialized Views
SQL Stream Builder (SSB) has the capability to materialize results from a streaming SQL
  query to a persistent view of the data that can be read using REST API/endpoints. Business
  Intelligence tools and applications can use the Materialized View REST endpoint to query streams
  of data without deploying database systems. In addition to REST, Materialized Views can also be
  queried using JDBC/ PostgreSQL wire protocol.
Materialized Views are in synchronization with the mutating stream - they are updated by a
   primary key as data flows through the system. The data is updated by a given key, and it
   represents the latest view of the data by key. The following illustration shows the process of a
   Materialized View query in streaming SQL.



The following schemas are defined in the illustration:

Streaming schema: refers to what SSB knows from the source provider, for example Kafka
Source schema: refers to the schema of the table defined by the catalog in SSB
Derived schema: refers to the schema of the Materialized View that is created in the database
    as a result of the streaming query against the catalog table

For example: vehicleID Z latest latitude and longitude is X and Y. As the vehicle moves, the
   latitude and longitude for the vehicleID are updated . The primary key is defined at creation
   time and is immutable.
Materialized Views can be created as mutating snapshots of the queried data result that is
   updated by a given key. The data is always the latest representation of itself by key (analogous
   to a primary key in most RDBMS systems).
You can query the Materialized Views using a GET request over REST, which returns a JSON
   response as "Content-Type: application/json". The queries are not defined at query time. Rather,
   they are curated, saved, and granted access through the Cloudera platform. You can configure a
   REST endpoint to query the Materialized View. Multiple query conditions can be created to allow
   various ways to query the same data. This is sometimes referred to as a 'pull query'.
Null Keys
In situations where information about a specific item is updated incrementally, for example,
    data about something is received in multiple messages, there may be keys missing from the
    incoming messages (for example, the streaming schema). In this case SSB continues to consume
    these messages, but marks the missing key as NULL at the sink, therefore SSB will also update
    the Materialized View with an upsert including the NULL values. To change this behavior, the
    “ignore null” option can be used, which tells SSB to update the relevant record only with the
    non-null values of the incoming message. Similarly, when a key is removed from the source
    schema, but not from the streaming schema, SSB ignores the key on the stream of incoming
    messages.


Creating Materialized ViewsAfter executing a SQL Stream job, you can set up the Materialized Views to have a         snapshot of your queried data. You can use the URL Pattern from the Materialized View to         visualize the generated data.Configuring Retention Time for Materialized ViewsWhen creating Materialized Views, you can configure how the system should retain the     data rows in the Materialized Views. You can either choose between retaining the data by time or     the row count.Materialized View PaginationYou can set a limit and order the results of a Materialized View query by adding values   to the limit and offset configurations.Using Dynamic Materialized View EndpointsYou can use static or dynamic REST endpoints when creating Materialized Views in SQL   Stream Builder. After setting filters for the Materialized View query, you can further filter down   the results by using variables in the endpoint URL.Configuring Materialized View database informationIn CDP Public Cloud, PostgreSQL is automatically configured for SQL Stream Builder (SSB)   when creating your Data Hub cluster using the Streaming Analytics cluster template. You can review   the database configuration for SSB using Cloudera Manager.Using SQL Stream Builder with Cloudera Data VisualizationYou can create Business Intelligence reports from the Materialized Views created in SQL     Stream Builder (SSB) using Cloudera Data Visualization. To integrate SSB with Data     Visualization, you need to provide the PostgreSQL database information of SSB in Data     Visualization.