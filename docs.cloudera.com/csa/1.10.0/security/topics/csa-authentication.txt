Authentication and encryption for FlinkCloudera Docs
Authentication and encryption for Flink
You must use authentication and encryption to secure your data and data sources. You can
  use Kerberos and TLS/SSL authentication to secure your Flink jobs. The administrator should
  provide your keystore and truststore credentials for your Cloudera user.
Authentication
While meeting the security requirements for various connectors is an ongoing effort, Flink
    provides first-class support for Kerberos authentication only.
The primary goals of the Flink Kerberos security infrastructure are:
to enable secure data access for jobs within a cluster through connectors (for example,
      Kafka)
to authenticate to Hadoop components (for example, HDFS, HBase, Zookeeper)
to enable secure SPNEGO for Global Dashboard access

In a production deployment scenario, streaming jobs usually run for long periods of time.
    Authentication is mandatory to secure data sources throughout the lifetime of a job. Kerberos
    keytabs do not expire in that timeframe, unlike a Hadoop delegation token or ticket cache entry.
    Cloudera recommends using keytabs for long-running production deployments.

Encryption (TLS)
Flink differentiates between internal and external connectivity in case of encryption.
Internal connectivity refers to all connections made between Flink processes. Because internal
    communication is mutually authenticated, keystore and truststore typically contain the same
    dedicated certificate. The certificate can use wildcard hostnames or addresses because the
    certificate is expected to be a shared secret and hostnames are not verified.
External connectivity refers to all connections made from the outside to Flink processes. When
    Flink applications are running on CDP Private Cloud Base clusters, the
    Flink web dashboard is accessible through the tracking URL of the YARN proxy. Depending on the
    security setup in YARN, the proxy itself can enforce authentication (SPNEGO) and encryption
    (TLS) already for YARN jobs. This can be sufficient when CDP perimeter is protected by a
    firewall from external user access. If there is no such protection available, additional TLS
    configuration is required to protect REST endpoints with TLS. 
For more information, see the Apache Flink documentation.


Parent topic: Securing Apache Flink