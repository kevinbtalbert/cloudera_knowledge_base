Key features of SSBCloudera Docs
Key features of SSB
SQL Stream Builder (SSB) within Cloudera supports out-of-box integration with Flink.
    Using Flink SQL, you can create tables directly from the Streaming SQL Console window or
    built-in templates. For integration with Business Intelligence tools you can create Materialized
    Views.

Flink SQL
SQL Stream Builder allows you to use Data Definition Language (DDL), Data Manipulation
          Language (DML) and Query Language directly from the Streaming SQL Console. 
For more information about the supported Flink SQL statements, see the Flink SQL statements section.
Change Data Capture
SQL Stream Builder supports PostgreSQL, Oracle, MySQL, Db2 and SQL Server as Debezium
          connectors using Flink SQL. With Change Data Capture (CDC), you can capture changes in
          your databases and update your applications with the newly added data. For more
            information about Debezium, see the official documentation.
Session Cluster
When you start SSB, a session cluster is deployed to share and maintain resources. The
          submitted SQL jobs are executed as Flink jobs in the same session cluster that share a Job
          Manager. The properties for the session cluster can be viewed using the Streaming SQL
          Console, and can be modified with SET statements in the SQL window.
Built-in Templates
The Build-in Templates in SSB allows you to quickly and simply create tables for your
          SQL queries. You only need to provide the connection and job specific information to the
          template to use it in SSB.
Streaming SQL Console
SSB comes with an interactive user interface that allows you to easily create, and manage
          your SQL jobs in one place. It allows you to create and iterate on SQL statements with
          robust tooling and capabilities. Query parsing is logged to the console, and results are
          sampled back to the interface to help with iterating on the SQL statement as required.


Materialized Views
SSB has the capability to materialize results from a Streaming SQL query to a persistent
          view of the data that can be read through REST and over the PG wire protocol. Applications
          can use this mechanism to query streams of data in a way of high performance without
          deploying additional database systems. Materialized Views are built into the SQL Stream
          Builder service, and require no configuration or maintenance. The Materialized Views act
          like a special kind of sink, and can even be used in place of a sink. They require no
          indexing, storage allocation, or specific management.
Input Transform
In case you are not aware of the incoming data structure or raw data is being collected from
          for example sensors, you can use the Input Transform to clean up and organize the incoming
          data before querying. Input transforms also allow access to Kafka header metadata directly
          in the query itself. Input transforms are written in Javascript and compiled to Java
          bytecode deployed with the Flink jar.
User-defined Functions
You can create customized and complex SQL queries by using User-defined Functions to enrich
          your data, apply computations or a business logic on it. User defined functions are
          written in Javascript or Java language.


Related informationIntegration with Flink