Hive VW concurrency auto-scalingCloudera Docs
Hive VW concurrency auto-scaling
The Hive and Impala Virtual Warehouses use concurrency auto-scaling under certain
    conditions, but the auto-scaling implementation is different. You learn about the Hive Virtual
    Warehouse concurrency auto-scaling, which helps you better configure a Hive Virtual Warehouse
    for running BI queries.
Concurrency auto-scaling is designed for running BI queries. When the query load increases,
      auto-scaling increases. The query load grows proportionally with the number of concurrent
      queries and query complexity. When you run the BI query, HiveServer generates a preliminary
      query execution plan.
HiveServer locates an available query coordinator in the Virtual Warehouse to handle the query. The query coordinator generates the final query plan that distributes query tasks across available executors for execution. 
     Each query coordinator can send query tasks to all query executors in the executor group, as shown in the following diagram of an XSmall Virtual Warehouse, for example:
   



A single query on an idle Virtual Warehouse does not cause auto-scaling. The query uses the resources available at the time of the query submission. Only subsequent queries can cause auto-scaling. 
   
Auto-scaling occurs when either the headroom, or wait time, exceeds the threshold you configure. Additional query executor groups are added to do the scaling, as shown in the following diagram. 



Each executor group can run up to twelve queries. The size of executor groups is determined by the size you choose when you create the Virtual Warehouse (XSMALL, SMALL, MEDIUM, or LARGE). A single query is always contained within a single executor group and never spans multiple executor groups. The throughput for an individual query is determined by the original size of the warehouse.
The following diagram shows the same basic auto-scaling scenario as the diagram
      above but from a different perspective. In this diagram the query coordinator perspective,
      instead of the executor group, is shown.



There are as many query coordinators as executors, but there is not a one-to-one correspondence. Instead, each query coordinator can interact with all executors. However, one query coordinator can only orchestrate the execution of tasks for one query at a time, so the number of query coordinators determines the query parallelism limit.
   

Related informationTuning Hive LLAP Virtual WarehousesVirtual Warehouse sizing requirementsVirtual Warehouse IP address and cloud resource           requirements