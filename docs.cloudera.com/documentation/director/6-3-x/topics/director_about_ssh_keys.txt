



SSH Keys in Altus Director | 6.3.x | Cloudera Documentation










































 Documentation


Products
Services & Support
Solutions









Cloudera Altus DirectorÂ 6.3.x | Other versions





Using Altus Director Server to Manage Cloudera Manager Instances








View All Categories

Introduction

Displaying Altus Director Documentation
Altus Director Interfaces


Release Notes

New Features and Changes
Known Issues
Fixed Issues
Unsupported Components and Features
Altus Director API


Requirements and Supported Versions
Getting Started

Amazon Web Services (AWS)

Preparing Your AWS EC2 Resources
Launching an EC2 Instance for Altus Director

Choosing an AMI


Installing Altus Director Server and Client on the EC2 Instance
Subscribing to Altus Director in the AWS Marketplace
Configuring a SOCKS Proxy for Amazon EC2
Adding an Altus Director Environment on AWS
Simple Setup: Creating a Cluster on AWS with Default Settings
Advanced Setup: Installing Cloudera Manager and CDH on AWS
Pausing a Cluster on AWS
Cleaning Up Your AWS Deployment
Using Custom DNS in AWS


Google Cloud Platform

Creating a Google Cloud Platform Project
Configuring Tools for Your Google Cloud Platform Account
Creating a Google Compute Engine VM Instance
Installing Altus Director Server and Client on Google Compute Engine
Configuring a SOCKS Proxy for Google Compute Engine
Deploying Cloudera Manager and CDH on Google Compute Engine
Cleaning Up Your Google Cloud Platform Deployment


Microsoft Azure

Obtaining Credentials for Altus Director
Setting up Azure Resources
Setting Up Dynamic DNS on Azure
Setting Up MySQL or PostgreSQL
Setting Up a Virtual Machine for Altus Director Server
Installing Altus Director Server and Client on Azure
Configuring a SOCKS Proxy for Microsoft Azure
Allowing Access to VM Images
Adding an Altus Director Environment on Azure
Simple Setup: Creating an Azure Cluster with Default Settings
Advanced Setup: Installing Cloudera Manager and CDH on Azure
Terminating an Azure Deployment
Adding New VM Images, Custom VM Images, Regions, and Instances
Important Notes About Altus Director and Azure




Usage-Based Billing

Usage Bundles


Using Cloud Provider Regions

Running Altus Director and Cloudera Manager in Different Regions or Clouds
Using a New AWS Region in Altus Director


Configuring Storage for Altus Director

Using MySQL for Altus Director Server
Using MariaDB for Altus Director Server
Altus Director Database Encryption
Migrating the Altus Director Database


Configuring Storage for Cloudera Manager and CDH

Using an External Database for Cloudera Manager and CDH

Defining External Database Servers
Defining External Databases
Using the External Databases for Cloudera SDX


Using Amazon S3 Object Storage


Using EBS Volumes for Cloudera Manager and CDH
Security, Encryption, and High Availability

Enabling TLS with Altus Director
SSH Host Key Retrieval and Verification
Creating Kerberized Clusters With Altus Director
Enabling Sentry Service Authorization
Creating Highly Available Clusters With Altus Director
Encrypted Configuration Properties


Configuring and Running Altus Director

Auto-Repair for Failed or Terminated Instances
Deploying Java on Cluster Instances
Setting Altus Director Properties
Pausing Altus Director Instances
Configuring Altus Director Server for LDAP and Active Directory
Configuring Altus Director for a New AWS Instance Type
Configuring Altus Director to Use Custom Tag Names on AWS


Running Altus Director Behind a Proxy

Configuring Cloudera Manager to Use a Proxy
Configuring Other Software to Use a Proxy
Configuring Altus Director to Use a Proxy
Authenticating Proxies
HTTPS Proxies


Using Altus Director Server to Manage Cloudera Manager Instances

Altus Director and Cloudera Manager Usage
Setting Cloudera Manager Configurations
Ports Used by Altus Director
SSH Keys in Altus Director
Creating AWS Identity and Access Management (IAM) Policies
Using Custom Repositories with Cloudera Manager and CDH
Cloudera Manager Health Information
Opening Cloudera Manager
Diagnostic Data Collection
User Management


Using Altus Director Server to Manage Cluster Instances

The Altus Director Configuration File
Submitting a Cluster Configuration File
Exporting a Configuration File
Deploying Clusters in an Existing Environment
Using Spot Instances
Using Automatic Instance Groups
Using Products outside CDH with Altus Director

Custom Service Descriptors
Using Kudu with CDH 5.12 or Earlier
Using Spark 2 with Altus Director
Using Cloudera Data Science Workbench with Altus Director
Using Third-Party Products with Altus Director


Creating and Modifying Clusters with the Altus Director Web UI
Altus Director Scripts
Terminating a Cluster


Using the Altus Director Client

Installing Altus Director Client
Provisioning a Cluster on AWS
Running Altus Director Client


Upgrading Altus Director
Troubleshooting
FAQ
Altus Director Glossary





To read this documentation, you must turn JavaScript on.




SSH Keys in Altus Director

The Role of Keys in SSH

SSH is a protocol for communicating over an encrypted channel between computers. A common use of SSH is to connect to a remote computer in order to establish a shell process, within
which commands can be issued. The SSH client logs in to the SSH server and receives a shell prompt. The client can issue shell
commands, and then terminate the connection or log out when finished.
SSH uses the same kind of strong encryption that is used by TLS and SSL for encrypted web traffic. An observer should not be able to determine the contents of the network traffic between
the client and the server. Through encryption, SSH provides confidentiality of communications.
When establishing an SSH connection for shell use, a client needs to authenticate to a server. Authentication can be performed in a few ways. One common way is through a username and
password pair. While this is a well understood and widely supported means of authentication, it is vulnerable to the use of weak passwords.
A better option is to use a key pair. Like key pairs in TLS and SSL, an SSH key pair is composed of a private key and a corresponding public key. When the server is configured with the
public key, the client can authenticate using the private key. Due to the way that the authentication mechanism works, the private key does not need to be passed over the network. Also, a private key
is much larger, and much harder to guess, than a password. For these reasons, SSH key authentication is almost always preferred over password authentication.



Use of SSH Keys in Cloud Providers

When a cloud provider creates a new instance, and you want to be able to connect to it over SSH, you must somehow inform the provider about the public key for authentication. The cloud
provider is responsible for installing the public key in the correct location for it to work for authenticating with the corresponding private key.
The way that you tell a cloud provider about a key pair varies. For example, in AWS, you set up an EC2 key pair, which has an associated name. You can either have AWS generate the key
pair and send you the data, or generate the key pair yourself and only upload the public key. No matter the provider, when you create an instance, you include information about the key pair.
Generally, the cloud provider copies the public key into the authorized_keys file in the standard login account for the instance. This is enough to
configure the instance's SSH server to allow authentication to that account with the corresponding private key. To use it on the command line:
ssh -i /path/to/private_key.pem username@instance_ip_address



Altus Director's Use of SSH Keys

Altus Director uses SSH to issue commands to instances that it launches and configures as part of bootstrapping deployments and clusters. Therefore, Altus Director requires the private
key used to authenticate to the standard login account of each instance that it launches. It is insufficient for it to only be supplied the public key or an identifier for the private key material;
only the private key itself is sufficient for authentication to succeed.
When you create a new environment in Altus Director, you supply the default username for a standard login account and the default SSH private key for authentication to that account.
Every instance that Altus Director launches under the environment is accessed, by default, using the username and private key. An instance template, which specifies instance features like size and
backing image, can override the username.
The private key must be provided to Altus Director in unencrypted form. However, Altus Director encrypts its own database where it stores private keys.



Good Practices for SSH Key Management with Altus Director



Use large key sizes. When creating an RSA key pair, use a key length of at least 2048 bits.
Protect private keys by keeping them off the network. A cloud provider only requires the public key from an SSH key pair to launch instances you can
authenticate to. The corresponding private key does not need to leave the computer where it was generated. Accordingly, for better security, instead of having AWS generate your key pair, generate it
locally and upload only the public key.
Change the Altus Director database encryption password. Altus Director ships with encryption of its own database enabled, but with a default encryption
password. Follow the instructions for changing the encryption password in Starting with Encryption to avoid easy decryption
if the database is compromised.
Do not use personal SSH key pairs for Cloudera Manager and cluster instances. Instead, generate dedicated "service" SSH key pairs that are only for use by
instances launched by Altus Director. This allows the lifecycle of personal and service key pairs to be managed separately. Also, service key pairs can then be shared without compromising any
individual user's key pairs.
Install additional SSH public keys on instances with bootstrap scripts. To permit wider authentication to instances, use a bootstrap script to append
approved public keys to the authorized_keys file for the standard login accounts, as an alternative to sharing the private key of the "primary" SSH key pair installed by
the cloud provider.





Categories: AWS | Altus Director | Cloud Providers | SSH | All Categories



Ports Used by Altus Director


Creating AWS Identity and Access Management (IAM)
Policies


















About Cloudera
Resources
Contact
Careers
Press
Documentation

United States: +1 888 789 1488
Outside the US: +1 650 362 0488



Â© 2019 Cloudera, Inc. All rights reserved. Apache Hadoop and associated open source project names are trademarks of the Apache Software Foundation. For a complete list of trademarks, click here.
If this documentation includes code, including but not limited to, code examples, Cloudera makes this available to you under the terms of the Apache License, Version 2.0, including any required
notices. A copy of the Apache License Version 2.0 can be found here.










Terms & ConditionsÂ  | Â Privacy Policy

Page generated JulyÂ 28,Â 2019.












