



Creating Kerberized Clusters With Altus Director | 6.3.x | Cloudera Documentation











































 Documentation


Products
Services & Support
Solutions









Cloudera Altus Director 6.3.x | Other versions





Security, Encryption, and High Availability








View All Categories

Introduction

Displaying Altus Director Documentation
Altus Director Interfaces


Release Notes

New Features and Changes
Known Issues
Fixed Issues
Unsupported Components and Features
Altus Director API


Requirements and Supported Versions
Getting Started

Amazon Web Services (AWS)

Preparing Your AWS EC2 Resources
Launching an EC2 Instance for Altus Director

Choosing an AMI


Installing Altus Director Server and Client on the EC2 Instance
Subscribing to Altus Director in the AWS Marketplace
Configuring a SOCKS Proxy for Amazon EC2
Adding an Altus Director Environment on AWS
Simple Setup: Creating a Cluster on AWS with Default Settings
Advanced Setup: Installing Cloudera Manager and CDH on AWS
Pausing a Cluster on AWS
Cleaning Up Your AWS Deployment
Using Custom DNS in AWS


Google Cloud Platform

Creating a Google Cloud Platform Project
Configuring Tools for Your Google Cloud Platform Account
Creating a Google Compute Engine VM Instance
Installing Altus Director Server and Client on Google Compute Engine
Configuring a SOCKS Proxy for Google Compute Engine
Deploying Cloudera Manager and CDH on Google Compute Engine
Cleaning Up Your Google Cloud Platform Deployment


Microsoft Azure

Obtaining Credentials for Altus Director
Setting up Azure Resources
Setting Up Dynamic DNS on Azure
Setting Up MySQL or PostgreSQL
Setting Up a Virtual Machine for Altus Director Server
Installing Altus Director Server and Client on Azure
Configuring a SOCKS Proxy for Microsoft Azure
Allowing Access to VM Images
Adding an Altus Director Environment on Azure
Simple Setup: Creating an Azure Cluster with Default Settings
Advanced Setup: Installing Cloudera Manager and CDH on Azure
Terminating an Azure Deployment
Adding New VM Images, Custom VM Images, Regions, and Instances
Important Notes About Altus Director and Azure




Usage-Based Billing

Usage Bundles


Using Cloud Provider Regions

Running Altus Director and Cloudera Manager in Different Regions or Clouds
Using a New AWS Region in Altus Director


Configuring Storage for Altus Director

Using MySQL for Altus Director Server
Using MariaDB for Altus Director Server
Altus Director Database Encryption
Migrating the Altus Director Database


Configuring Storage for Cloudera Manager and CDH

Using an External Database for Cloudera Manager and CDH

Defining External Database Servers
Defining External Databases
Using the External Databases for Cloudera SDX


Using Amazon S3 Object Storage


Using EBS Volumes for Cloudera Manager and CDH
Security, Encryption, and High Availability

Enabling TLS with Altus Director
SSH Host Key Retrieval and Verification
Creating Kerberized Clusters With Altus Director
Enabling Sentry Service Authorization
Creating Highly Available Clusters With Altus Director
Encrypted Configuration Properties


Configuring and Running Altus Director

Auto-Repair for Failed or Terminated Instances
Deploying Java on Cluster Instances
Setting Altus Director Properties
Pausing Altus Director Instances
Configuring Altus Director Server for LDAP and Active Directory
Configuring Altus Director for a New AWS Instance Type
Configuring Altus Director to Use Custom Tag Names on AWS


Running Altus Director Behind a Proxy

Configuring Cloudera Manager to Use a Proxy
Configuring Other Software to Use a Proxy
Configuring Altus Director to Use a Proxy
Authenticating Proxies
HTTPS Proxies


Using Altus Director Server to Manage Cloudera Manager Instances

Altus Director and Cloudera Manager Usage
Setting Cloudera Manager Configurations
Ports Used by Altus Director
SSH Keys in Altus Director
Creating AWS Identity and Access Management (IAM) Policies
Using Custom Repositories with Cloudera Manager and CDH
Cloudera Manager Health Information
Opening Cloudera Manager
Diagnostic Data Collection
User Management


Using Altus Director Server to Manage Cluster Instances

The Altus Director Configuration File
Submitting a Cluster Configuration File
Exporting a Configuration File
Deploying Clusters in an Existing Environment
Using Spot Instances
Using Automatic Instance Groups
Using Products outside CDH with Altus Director

Custom Service Descriptors
Using Kudu with CDH 5.12 or Earlier
Using Spark 2 with Altus Director
Using Cloudera Data Science Workbench with Altus Director
Using Third-Party Products with Altus Director


Creating and Modifying Clusters with the Altus Director Web UI
Altus Director Scripts
Terminating a Cluster


Using the Altus Director Client

Installing Altus Director Client
Provisioning a Cluster on AWS
Running Altus Director Client


Upgrading Altus Director
Troubleshooting
FAQ
Altus Director Glossary





To read this documentation, you must turn JavaScript on.




Creating Kerberized Clusters With Altus Director

Using Altus Director 2.0 and higher with Cloudera Manager 5.5.0 and higher, you can create and configure Kerberized Cloudera Manager clusters. To launch a Kerberized cluster, edit the
configuration file as described below and launch the cluster with Altus Director client, using the bootstrap-remote command to send the configuration file to a running
Altus Director server.
You must have an existing Kerberos Key Distribution Center (KDC) set up, and it must be reachable by the instance where Altus Director server is running and the instances where your
Cloudera Manager cluster will be deployed. You must also set up a Kerberos realm for the cluster and a principal in that realm.
Note: To deploy a cluster that connects to a special Kerberos appliance such as FreeIPA, run the following command on the Cloudera Manager host to
skip the credential import:
sed -i '/kinit/i exit 0' /usr/share/cmf/bin/import_credentials.sh
This step is required because Cloudera Manager cannot import the credentials, and the credentials are not necessary in this scenario.

Important: Do not use Cloudera Manager to enable Kerberos on an existing cluster that is managed by Altus Director. Kerberos must be enabled
through Altus Director using the configuration file, at the time of cluster setup.


Creating a Kerberized Cluster with the Altus Director Configuration File

A sample configuration file for creating Kerberized Cloudera Manager clusters is available on the Cloudera GitHub site: director-scripts/kerberos/aws.kerberos.sample.conf.
The settings for enabling Kerberos are in the Cloudera Manager section of the configuration file. Provide values for the following configuration settings:




Configuration setting
Description




krbAdminUsername
An administrative Kerberos account with permissions that allow the creation of principals on the KDC that Cloudera Manager will be
using. This is typically in the format principal@your.KDC.realm


krbAdminPassword
The password for the administrative Kerberos account.


KDC_TYPE
The type of KDC Cloudera Manager will use. Valid values are "MIT KDC" and "Active Directory".


KDC_HOST
The hostname or IP address of the KDC.


SECURITY_REALM
The security realm that the KDC uses.


AD_KDC_DOMAIN
Active Directory suffix where all the accounts used by CDH daemons will be created. Used only if Active Directory KDC is being used for
authentication. This configuration should be in the format of an X.500 Directory Specification (DC=domain,DC=example,DC=com).


KRB_MANAGE_KRB5_CONF
If set to true, allows Cloudera Manager to deploy Kerberos configurations to cluster instances. If
false, Cloudera Manager does not deploy Kerberos configurations to cluster instances. You must set up your own method to deploy Kerberos configuration to the cluster
instances.


KRB_ENC_TYPES
The encryption types your KDC supports. Some of encryption types listed in the sample configuration file require the unlimited strength
JCE policy files.




Other Kerberos configuration options are available to Cloudera Manager. For more information, see Configuring Authentication in the Cloudera Security guide.
The following example shows the cloudera-manager section of a configuration file with MIT KDC Kerberos enabled:
cloudera-manager {
   instance: ${instances.cm-image} {
      tags {
         application: "Cloudera Manager 5"
      }
   }
        
#
# Automatically activate 60-Day Cloudera Enterprise Trial
#
   enableEnterpriseTrial: true
        
   unlimitedJce: true
# Kerberos principal and password for use by Altus Director 
   krbAdminUsername: "principal@my.kdc.realm"
   krbAdminPassword: "password"      

# Cloudera Manager configuration values  
   configs {
      CLOUDERA_MANAGER {
         KDC_TYPE: "MIT KDC"
         KDC_HOST: "KDC_host_ip_address"
         SECURITY_REALM: "my_security_realm"
         KRB_MANAGE_KRB5_CONF: true
         KRB_ENC_TYPES: "aes256-cts aes128-cts des3-hmac-sha1 arcfour-hmac des-hmac-sha1 des-cbc-md5 des-cbc-crc"
      }
   }
}
      


Categories: Altus Director | Cloudera Manager | Configuring | Kerberos | All Categories



SSH Host Key Retrieval and Verification


Enabling Sentry Service Authorization


















About Cloudera
Resources
Contact
Careers
Press
Documentation

United States: +1 888 789 1488
Outside the US: +1 650 362 0488



© 2019 Cloudera, Inc. All rights reserved. Apache Hadoop and associated open source project names are trademarks of the Apache Software Foundation. For a complete list of trademarks, click here.
If this documentation includes code, including but not limited to, code examples, Cloudera makes this available to you under the terms of the Apache License, Version 2.0, including any required
notices. A copy of the Apache License Version 2.0 can be found here.










Terms & Conditions  |  Privacy Policy

Page generated July 28, 2019.












