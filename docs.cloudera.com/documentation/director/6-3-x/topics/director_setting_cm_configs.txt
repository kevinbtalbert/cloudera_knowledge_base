



Setting Cloudera Manager Configurations | 6.3.x | Cloudera Documentation












































 Documentation


Products
Services & Support
Solutions









Cloudera Altus DirectorÂ 6.3.x | Other versions





Using Altus Director Server to Manage Cloudera Manager Instances








View All Categories

Introduction

Displaying Altus Director Documentation
Altus Director Interfaces


Release Notes

New Features and Changes
Known Issues
Fixed Issues
Unsupported Components and Features
Altus Director API


Requirements and Supported Versions
Getting Started

Amazon Web Services (AWS)

Preparing Your AWS EC2 Resources
Launching an EC2 Instance for Altus Director

Choosing an AMI


Installing Altus Director Server and Client on the EC2 Instance
Subscribing to Altus Director in the AWS Marketplace
Configuring a SOCKS Proxy for Amazon EC2
Adding an Altus Director Environment on AWS
Simple Setup: Creating a Cluster on AWS with Default Settings
Advanced Setup: Installing Cloudera Manager and CDH on AWS
Pausing a Cluster on AWS
Cleaning Up Your AWS Deployment
Using Custom DNS in AWS


Google Cloud Platform

Creating a Google Cloud Platform Project
Configuring Tools for Your Google Cloud Platform Account
Creating a Google Compute Engine VM Instance
Installing Altus Director Server and Client on Google Compute Engine
Configuring a SOCKS Proxy for Google Compute Engine
Deploying Cloudera Manager and CDH on Google Compute Engine
Cleaning Up Your Google Cloud Platform Deployment


Microsoft Azure

Obtaining Credentials for Altus Director
Setting up Azure Resources
Setting Up Dynamic DNS on Azure
Setting Up MySQL or PostgreSQL
Setting Up a Virtual Machine for Altus Director Server
Installing Altus Director Server and Client on Azure
Configuring a SOCKS Proxy for Microsoft Azure
Allowing Access to VM Images
Adding an Altus Director Environment on Azure
Simple Setup: Creating an Azure Cluster with Default Settings
Advanced Setup: Installing Cloudera Manager and CDH on Azure
Terminating an Azure Deployment
Adding New VM Images, Custom VM Images, Regions, and Instances
Important Notes About Altus Director and Azure




Usage-Based Billing

Usage Bundles


Using Cloud Provider Regions

Running Altus Director and Cloudera Manager in Different Regions or Clouds
Using a New AWS Region in Altus Director


Configuring Storage for Altus Director

Using MySQL for Altus Director Server
Using MariaDB for Altus Director Server
Altus Director Database Encryption
Migrating the Altus Director Database


Configuring Storage for Cloudera Manager and CDH

Using an External Database for Cloudera Manager and CDH

Defining External Database Servers
Defining External Databases
Using the External Databases for Cloudera SDX


Using Amazon S3 Object Storage


Using EBS Volumes for Cloudera Manager and CDH
Security, Encryption, and High Availability

Enabling TLS with Altus Director
SSH Host Key Retrieval and Verification
Creating Kerberized Clusters With Altus Director
Enabling Sentry Service Authorization
Creating Highly Available Clusters With Altus Director
Encrypted Configuration Properties


Configuring and Running Altus Director

Auto-Repair for Failed or Terminated Instances
Deploying Java on Cluster Instances
Setting Altus Director Properties
Pausing Altus Director Instances
Configuring Altus Director Server for LDAP and Active Directory
Configuring Altus Director for a New AWS Instance Type
Configuring Altus Director to Use Custom Tag Names on AWS


Running Altus Director Behind a Proxy

Configuring Cloudera Manager to Use a Proxy
Configuring Other Software to Use a Proxy
Configuring Altus Director to Use a Proxy
Authenticating Proxies
HTTPS Proxies


Using Altus Director Server to Manage Cloudera Manager Instances

Altus Director and Cloudera Manager Usage
Setting Cloudera Manager Configurations
Ports Used by Altus Director
SSH Keys in Altus Director
Creating AWS Identity and Access Management (IAM) Policies
Using Custom Repositories with Cloudera Manager and CDH
Cloudera Manager Health Information
Opening Cloudera Manager
Diagnostic Data Collection
User Management


Using Altus Director Server to Manage Cluster Instances

The Altus Director Configuration File
Submitting a Cluster Configuration File
Exporting a Configuration File
Deploying Clusters in an Existing Environment
Using Spot Instances
Using Automatic Instance Groups
Using Products outside CDH with Altus Director

Custom Service Descriptors
Using Kudu with CDH 5.12 or Earlier
Using Spark 2 with Altus Director
Using Cloudera Data Science Workbench with Altus Director
Using Third-Party Products with Altus Director


Creating and Modifying Clusters with the Altus Director Web UI
Altus Director Scripts
Terminating a Cluster


Using the Altus Director Client

Installing Altus Director Client
Provisioning a Cluster on AWS
Running Altus Director Client


Upgrading Altus Director
Troubleshooting
FAQ
Altus Director Glossary





To read this documentation, you must turn JavaScript on.




Setting Cloudera Manager Configurations

You can use Altus Director to set configurations for the various Cloudera Manager entities that it deploys:

Cloudera Manager
Cloudera Management Service
CDH components such as HDFS, Hive, and HBase
Role types, such as NameNode, ResourceManager, and Impala Daemon

This functionality is available for both Altus Director client and Altus Director server:

Client - Using the configuration file.
Server - Using the Altus Director web UI or APIs (Java, REST, or Python).

To use the REST API, you can submit JSON documents to the REST service endpoint, or access the API console at http://director-server-hostname:7189/api-console.
You can find information about the Altus Director Java and Python APIs on the director-sdk GitHub
page.
In the web UI, you can specify custom values for Cloudera Manager configurations when adding an environment or creating a Cloudera Manager cluster.




Note: Cloudera Manager configuration properties are case-sensitive. To verify the correct way to specify Cloudera Manager configuration properties
in Altus Director API calls and in the configuration name fields of the Altus Director web UI, see Cloudera Manager Configuration Properties in the Cloudera Manager documentation. By expanding
this heading, you see topics such as the following:

CDH 5.14.0 Properties
Host Configuration Properties
Cloudera Manager Server Properties
Cloudera Management Service

These pages include tables of configuration properties. Locate the property whose value you want to customize, and use the name in the column API Name.
Altus Director enables you to customize deployment and cluster setup, and configurations are applied on top of Cloudera Manager default and automatic host-based configuration of services
and roles. Set configurations either in the deployment template or in the cluster template.


Cluster Configuration Using Cloudera Manager

Some configuration changes can safely be made to Altus Director-managed clusters using Cloudera Manager directly. For these use cases, Altus Director will sync up automatically with
changes made in Cloudera Manager. Other configuration changes cannot be safely made using Cloudera Manager directly because Altus Director will not become aware of the change, resulting in failures
when a user later tries to expand or otherwise modify the cluster.
For information on configuration changes and other changes to clusters that can and cannot be safely made directly through Cloudera Manager, see Altus Director and Cloudera Manager Usage.



Setting up a Cloudera Manager License

There are three ways to set up a Cloudera Manager license using Altus Director, each corresponding to a field within the Licensing configuration section
of the aws.conf configuration file. The three are mutually exclusive.

license field - You can embed license text in the license field of the configuration file. (Cloudera recommends using
triple quotes (""") for including multi-line text strings, as shown in the commented-out lines of the configuration file.) To embed a license in the license field, find
the Licensing configuration section of the configuration file and enter the appropriate values.
licensePath field - The licensePath field can be used to specify the path to a file containing the license.
enableEnterpriseTrial field - The enableEnterpriseTrial flag indicates whether the 60-Day Cloudera Enterprise Trial should
be activated when no license is present. This must not be set to true if a license is included using either license
or licensePath.


The License configuration section of the configuration file is shown below:
# 
# Embed a license for Cloudera Manager 
# 

# license: """ 
# -----BEGIN PGP SIGNED MESSAGE----- 
# Hash: SHA1 
# 
# { 
# "version" : 1, 
# "name" : "License Owner", 
# "uuid" : "license id", 
# "expirationDate" : 0, 
# "features" : [ "FEATURE1", "FEATURE2" ] 
# } 
# -----BEGIN PGP SIGNATURE----- 
# Version: GnuPG v1.4.11 (GNU/Linux) 
# 
# PGP SIGNATURE 
# -----END PGP SIGNATURE----- 
# """ 

# 
# Include a license for Cloudera Manager from an external file 
# 
# licensePath: "/path/to/license.txt.asc" 

# 
# Activate 60-Day Cloudera Enterprise Trial 
# 
enableEnterpriseTrial: true 
For more information about Cloudera Manager licenses, see Managing Licenses in the Cloudera Manager documentation.



Deployment Template Configuration

This section shows the structure of the Cloudera Manager deployment configuration settings in both the configuration file and the API.


Configuration File

Using the configuration file, the configs section in the deployment template has the following structure:
cloudera-manager {
   ...
   configs {
      # CLOUDERA_MANAGER corresponds to the Cloudera Manager Server configuration options 
      CLOUDERA_MANAGER { 
         enable_api_debug: false 
      } 
   
      # CLOUDERA_MANAGEMENT_SERVICE corresponds to the Service-Wide configuration options 
      CLOUDERA_MANAGEMENT_SERVICE { 
         enable_alerts : false 
         enable_config_alerts : false 
      } 

      ACTIVITYMONITOR { ... } 

      REPORTSMANAGER { ... } 

      NAVIGATOR { ... } 

      # Added in Cloudera Manager 5.2+ 
      NAVIGATORMETASERVER { ... } 

      # Configuration properties for all hosts 
      HOSTS { ... } 
   }
   ...
}



API

Using the API, the configs section for deployment templates has the following structure:
{
   "configs":  {
      "CLOUDERA_MANAGER": {
         "enable_api_debug": "true"
      },
      "CLOUDERA_MANAGEMENT_SERVICE": {
         "enable_alerts": "false"
      }
   }
}





Cluster Template Service-wide Configuration

This section shows the structure of the Cloudera Manager service-wide configuration settings in both the configuration file and the API.


Configuration File

Using the configuration file, the configs section for service-wide configurations in the cluster template has the following structure:
cluster {
   ...
   configs {
      HDFS {
         dfs_block_size: 1342177280
      } 
      MAPREDUCE {
         mapred_system_dir: /user/home
         mr_user_to_impersonate: mapred1
      }
   }
   ...
}




API

Using the API, the service-wide configurations block in the ClusterTemplate is labeled servicesConfigs, and has the
following structure:
{
   "servicesConfigs": {
      "HDFS": {
         "dfs_block_size": 1342177280
      },
      "MAPREDUCE": {
         "mapred_system_dir": "/user/home",
         "mr_user_to_impersonate": "mapred1"
      }
   }
}





Cluster Template Roletype Configurations

This section shows the structure of the Cloudera Manager roletype configuration settings in both the configuration file and the API.


Configuration File

Using the configuration file, roletype configurations in the cluster template are specified per instance group:
cluster {
   ...
   masters {
      ...
      # Optional custom role configurations
      configs {
         HDFS {
            NAMENODE {
               dfs_name_dir_list: /data/nn
               namenode_port: 1234
            }
         }
      }
      ...
   }
   ...
}



API

Using the API, roletype configurations in the cluster template are specified per instance group:
{
   "virtualInstanceGroups" : {
      "configs": {
         "HDFS": {
            "NAMENODE": {
                "dfs_name_dir_list": "/data/nn",
                "namenode_port": "1234"
            }
         }
      }
   }
}




Categories: Altus Director | Cloudera Manager | Configuring | Properties | All Categories



Altus Director and Cloudera Manager Usage


Ports Used by Altus
Director


















About Cloudera
Resources
Contact
Careers
Press
Documentation

United States: +1 888 789 1488
Outside the US: +1 650 362 0488



Â© 2019 Cloudera, Inc. All rights reserved. Apache Hadoop and associated open source project names are trademarks of the Apache Software Foundation. For a complete list of trademarks, click here.
If this documentation includes code, including but not limited to, code examples, Cloudera makes this available to you under the terms of the Apache License, Version 2.0, including any required
notices. A copy of the Apache License Version 2.0 can be found here.










Terms & ConditionsÂ  | Â Privacy Policy

Page generated JulyÂ 28,Â 2019.












