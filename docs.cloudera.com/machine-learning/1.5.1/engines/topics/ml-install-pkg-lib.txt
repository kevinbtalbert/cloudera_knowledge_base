Installing Additional PackagesCloudera Docs
Installing Additional Packages
Cloudera Machine Learning engines are preloaded with a few
    common packages and libraries for R, Python, and Scala. However, a key
    feature of Cloudera Machine Learning is the ability of different
    projects to install and use libraries pinned to specific versions, just as
    you would on your local computer.
noteBefore downloading or using third-party content, you are responsible
        for reviewing and complying with any applicable license terms and  making sure that they are
        acceptable for your use case. Generally, Cloudera recommends you install all required packages
      locally into your project. This will ensure you have the exact versions
      you want and that these libraries will not be upgraded when Cloudera
      upgrades the base engine image. You only need to install libraries and
      packages once per project. From then on, they are available to any new
      engine you spawn throughout the lifetime of the project. 
You can install additional
        libraries and packages from the workbench, using either the command prompt or the terminal.
        
note
Cloudera Machine Learning does not currently support installation of packages that
          require root access to the hosts. For such use-cases, you will need to create a new custom
          engine that extends the base engine image to include the required packages. For
          instructions, see Creating a Customized Engine Image.

(Python and R) Install Packages Using Workbench Command
        Prompt
To install a package from the command prompt:
Navigate to your project's Overview page. Click
              Open Workbench and launch a session.
At the command prompt (see Native Workbench Console and Editor) in the bottom right,
            enter the command to install the package. Some examples using Python and R have been
            provided. 


R

# Install from CRAN 
install.packages("ggplot2") 

# Install using devtools 
install.packages('devtools') 
library(devtools) 
install_github("hadley/ggplot2") 

Python 2

# Installing from console using ! shell operator and pip:
!pip install beautifulsoup

# Installing from terminal
pip install beautifulsoup

Python 3

# Installing from console using ! shell operator and pip3:
!pip3 install beautifulsoup4

# Installing from terminal
pip3 install beautifulsoup4

(Python Only) Using a Requirements File
For a Python project, you can specify a list of the packages you want
        in a requirements.txt file that lives in your project.
        The packages can be installed all at once using pip/pip3. 


Create a new file called requirements.txt file
            within your
            project:beautifulsoup4==4.6.0
seaborn==0.7.1

To install the packages in a Python 3 engine, run the following
            command in the workbench command prompt.
              !pip3 install -r requirements.txtFor
              Python 2 engines, use pip.
              !pip install -r requirements.txt





Related informationCondaUsing Conda to Manage DependenciesYou can install additional libraries and packages from the workbench, using either the     command prompt or the terminal. Alternatively, you might choose to use a package manager such as     Conda to install and maintain packages and their dependencies. This topic describes some basic     usage guidelines for Conda.