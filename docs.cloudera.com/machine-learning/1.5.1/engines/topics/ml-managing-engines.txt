Managing EnginesCloudera Docs
Managing Engines
This topic describes how to manage engines and configure engine
    environments to meet your project requirements.
Required Role: EnvironmentAdmin

        Site administrators and project administrators are responsible for
        making sure that all projects on the deployment have access to the
        engines they need. Site admins can create engine profiles, determine the
        default engine version to be used across the deployment, and white-list
        any custom engines that teams require. As a site administrator, you
        can also customize engine environments by setting global environmental
        variables and configuring any files/folders that need to be mounted into
        project environments on run time. 
By default, Cloudera Machine Learning ships a base engine image that includes
        kernels for Python, R, and Scala, along with some additional libraries ( see
        Configuring Cloudera Machine Learning Engines for more information) that
      can be used to run common data analytics operations. Occasionally, new engine versions are
      released and shipped with Cloudera Machine Learning releases. 
Engine images are available in the Site Administrator panel at Admin >  Engines, under the Engine Images section. As a site
      administrator, you can select which engine version is used by default for
      new projects. Furthermore, project administrators can explicitly select
      which engine image should be used as the default image for a project. To
      do so, go to the project's Overview page and click
        Settings on the left navigation bar. 
If a user publishes a new custom Docker image, site administrators are responsible for
      white-listing such images for use across the deployment. For more information on creating and
      managing custom Docker images, see Configuring the Engine Environment. 

Related informationConfiguring the Engine EnvironmentInstalling Additional PackagesCreating Resource ProfilesResource profiles define how many vCPUs and how much memory the product will reserve     for a particular workload (for example, session, job, model). Configuring the Engine EnvironmentThis section describes some of the ways you can configure engine environments to meet     the requirements of your projects. Set up a custom repository locationYou can set up a custom default location for Python and R code package repositories.   This is especially useful for air-gapped clusters that are isolated from the PIP and CRAN   repositories on the public internet.