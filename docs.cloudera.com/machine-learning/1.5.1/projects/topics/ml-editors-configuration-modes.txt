Modes of Configuring Third-Party EditorsCloudera Docs
Modes of Configuring Third-Party Editors
The configuration for an IDE depends on which type of editor you want to
    use.
In addition to the native Cloudera Machine Learning editor, you can configure Cloudera
      Machine Learning to work with third-party, browser-based IDEs, such as Jupyter, and also
      certain local IDEs that run on your machine, such as PyCharm. 


Workbench editor
The Workbench editor is the built-in editor for Cloudera Machine Learning. No
            additional configuration is required to use it. When you launch a session, select the
            Workbench editor.
Third-party, browser-based IDEs

Browser IDEs are editors such as Jupyter or RStudio. When you use a browser IDE, it
              runs within a session and allows you to edit and run code interactively. Changes that
              you make in the editor are propagated to the Cloudera Machine Learning project. Base
              Engine Image v8 and higher ships with Jupyter preconfigured as a browser IDE. You can
              select it when you start a session or add a different browser IDE. For more
              information, see Configure a Browser IDE as an Editor.
Keep the following in mind when using browser IDEs:
Engine Version Requirements
Browser-based IDEs require Base Engine Image v8 or higher.

When you are finished using a browser IDE, you must exit the IDE properly,
                  including saving your work if necessary. Do not just stop the Cloudera Machine
                  Learning session. Doing so will cause you to lose your session state. For example,
                  if you want RStudio to save your state, including variables, to
                    ~/.RData, exit the RStudio workspace using the power button
                  in the top right of the RStudio UI.
Depending on the behavior of the browser IDE, multiple users within a project
                  may overwrite each other's state. For example, RStudio state is persisted in
                    /home/cdsw/.RData that is shared by all users within a
                  project. 
Browser IDEs do not adhere to the timeout set in
                    IDLE_MAXIMUM_MINUTES. Instead, they use the timeout set in
                    SESSION_MAXIMUM_MINUTES, which is 7 days by default. Cloudera
                  recommends that users stop their session manually after using a browser-based
                  editor. Running sessions continue to consume resources and may impact other
                  users.
Logs for browser IDEs are available on the Logs tab of
                  the session window. This includes information that the IDE may generate, such as
                  error messages, in addition to any Cloudera Machine Learning logs.


Local IDE Editors on your machine that can use SSH-based remote editing

These editors, referred to as Local IDEs in the documentation, are editors such as
              PyCharm that run on your local machine. They connect to Cloudera Machine Learning with
              an SSH endpoint and allow you to edit and run code interactively. You must manually
              configure some sort of file sync and ignore list between your local machine and
              Cloudera Machine Learning. You can use functionality within the local IDE, such as
              PyCharm's sync, or external tools that can sync via the SSH endpoint, such as
              Mutagen.
Keep the following in mind before setting up local IDEs:
Local IDEs do not require a specific engine image, but Cloudera always
                  recommends you use the latest engine image.
Site Administrators should work with IT to determine the data access policies
                  for your organization. For example, your data policy may not allow users to sync
                  certain files to their machines from Cloudera Machine Learning. Verify that users
                  understand the requirements and adhere to them when configuring their file sync
                  behavior.
Users should ensure that any IDEs that the IDEs they want to use support SSH.
                  For example, VS Code supports "remote development over SSH," and PyCharm supports
                  using a "remote interpreter over SSH." 





Related informationConfigure a Browser IDE as an EditorConfigure a Local IDE using an SSH GatewayParent topic: Third-Party Editors