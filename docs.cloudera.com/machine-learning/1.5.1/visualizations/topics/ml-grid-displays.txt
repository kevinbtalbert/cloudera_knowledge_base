Grid DisplaysCloudera Docs
Grid Displays
Cloudera Machine Learning supports built-in grid displays of
    DataFrames across several languages.
Python
Using DataFrames with the pandas package requires per-session
        activation:import pandas as pd
pd.DataFrame(data=[range(1,100)])
For PySpark DataFrames, use pandas and run
          df.toPandas() on a PySpark DataFrame. This will bring
        the DataFrame into local memory as a pandas DataFrame. note
A Python project originally created with engine 1 will be running
          pandas version 0.19, and will not auto-upgrade to version 0.20 by
          simply selecting engine 2 in the project's
              Settings > 
              Engine page.
The pandas data grid setting only exists starting in version 0.20.1.
          To upgrade, manually install version 0.20.1 at the session prompt.
!pip install pandas==0.20.1 

R
In R, DataFrames will display as grids by default. For example, to view
        the Iris data set, you would just use: irisSimilar to PySpark, bringing Sparklyr data into local memory with
          as.data.frame will output a grid
        display.sparkly_df %>% as.data.frame

Scala
Calling the display() function on an existing
        dataframe will trigger a collect, much like df.show(). val df = sc.parallelize(1 to 100).toDF()
display(df)
Parent topic: Built-in CML Visualizations