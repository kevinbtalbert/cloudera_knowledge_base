Using an MLflow Model Artifact in a Model REST APICloudera Docs
Using an MLflow Model Artifact in a Model REST API
You can use MLflow to create, deploy, and manage models as REST APIs to serve predictions

To create an MLflow model add the following information when you run an experiment: mlflow.log_artifacts ("output")
mlflow.sklearn.log_model(lr, "model")
For example:
import os
import warnings
import sys
import mlflow
import pandas as pd
import numpy as np
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import ElasticNet
import mlflow.sklearn

import logging

logging.basicConfig(level=logging.WARN)
logger = logging.getLogger(__name__)

def eval_metrics(actual, pred):
    rmse = np.sqrt(mean_squared_error(actual, pred))
    mae = mean_absolute_error(actual, pred)
    r2 = r2_score(actual, pred)
    return rmse, mae, r2
    
if __name__ == "__main__":
    mlflow.set_experiment("wine-quality-test")
    csv_url = (
"https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
    )
    try:
         data = pd.read_csv(csv_url, sep=";")
         except Exception as e:
         logger.exception(
             "Unable to download training & test CSV, check your internet connection. Error: %s", e
         )
         
# Split the data into training and test sets. (0.75, 0.25)
    split.train, test = train_test_split(data)
# The predicted column is "quality" which is a scalar from [3, 9]
    train_x = train.drop(["quality"], axis=1)
    test_x = test.drop(["quality"], axis=1)
    train_y = train[["quality"]]
    test_y = test[["quality"]]
    alpha = float(sys.argv[1]) if len(sys.argv) > 1 else 0.5
    l1_ratio = float(sys.argv[2]) if len(sys.argv) > 2 else 0.5
    with mlflow.start_run():
        lr = ElasticNet(alpha=alpha, l1_ratio=l1_ratio,
        random_state=42)
        lr.fit(train_x, train_y)
        predicted_qualities = lr.predict(test_x)
        (rmse, mae, r2) = eval_metrics(test_y,
        predicted_qualities)
        print("Elasticnet model (alpha=%f, l1_ratio=%f):" %
        (alpha, l1_ratio))
        print(" RMSE: %s" % rmse)
        print(" MAE: %s" % mae)
        print(" R2: %s" % r2)
        mlflow.log_param("alpha", alpha)
        mlflow.log_param("l1_ratio", l1_ratio)
        mlflow.log_metric("rmse", rmse)
        mlflow.log_metric("r2", r2)
        mlflow.log_metric("mae", mae)
        mlflow.sklearn.log_model(lr, "model")
In this example we are training a machine learning model using linear regression
                    to predict wine quality. This script creates the MLflow model artifact and logs
                    it to the model directory:
                        /home/cdsw/.experiments/<experiment_id>/<run_id>/artifacts/models
To view the model, navigate to the Experiments page and select your
    experiment name. CML displays the Runs page and lists all of your current
    runs.
Click the run from step 1 that created the MLflow model. CML displays the
     Runs detail page
Click Artifacts to display a list of all the logged artifacts for the
    run. 


Click model. CML displays the MLflow information you use to create
                predictions for your experiment.


