ModelsCloudera Docs
Models

Cloudera Machine Learning allows data scientists
      to build, deploy, and manage models as REST APIs to serve predictions. 
Challenge
Data scientists often develop models using a variety
        of Python/R open source packages. The challenge lies in actually
        exposing those models to stakeholders who can test the model. In most
        organizations, the model deployment process will require assistance from
        a separate DevOps team who likely have their own policies about
        deploying new code. 
For example, a model that has been developed in
        Python by data scientists might be rebuilt in another language by the
        devops team before it is actually deployed. This process can be slow and
        error-prone. It can take months to deploy new models, if at all. This
        also introduces compliance risks when you take into account the fact
        that the new re-developed model might not be even be an accurate
        reproduction of the original model. 
Once a model has been deployed, you then need to
        ensure that the devops team has a way to rollback the model to a
        previous version if needed. This means the data science team also needs
        a reliable way to retain history of the models they build and ensure
        that they can rebuild a specific version if needed. At any time, data
        scientists (or any other stakeholders) must have a way to accurately
        identify which version of a model is/was deployed. 

Solution
Cloudera Machine Learning allows data
        scientists to build and deploy their own models as REST APIs. Data
        scientists can now select a Python or R function within a project file,
        and Cloudera Machine Learning will:
Create a snapshot of model code,
            model parameters, and dependencies.
Package a trained model into an
            immutable artifact and provide basic serving code.
Add a REST endpoint that
            automatically accepts input parameters matching the function, and
            that returns a data structure that matches the functionâ€™s return
            type.
Save the model along with some
            metadata.
Deploy a specified number of model
            API replicas, automatically load balanced.




Models - Concepts and Terminology