Using the Apache Thrift Proxy APICloudera Docs
Using the Apache Thrift Proxy API
The Apache Thrift library provides cross-language client-server remote procedure calls
  (RPCs), using Thrift bindings.
A Thrift binding that uses the Apache Thrift Proxy API, is a client code generated
   by the Apache Thrift compiler for a target language (such as Python) that allows communication
   between the Thrift server and clients using that client code. HBase includes an Apache Thrift
   Proxy API, which allows you to write HBase applications in Python, C, C++, or another language
   that Thrift supports. The Thrift Proxy API is slower than the Java API and may have fewer
   features. To use the Thrift Proxy API, you need to configure and run the HBase Thrift server on
   your cluster. You also need to install the Apache Thrift compiler on your development system.

Preparing a thrift server and clientLearn how to prepare a Thrift server and client before using a Thrift Proxy         API.List of Thrift API and HBase configurationsReferences for the right classes and functions along with the right configurations for     HBase.Example for using THttpClient API in secure clusterRefer to this example of using the THttpClient API in secure cluster.Example for using THttpClient API in unsecure clusterRefer to this example of using the THttpClient API in unsecure cluster.Example for using TSaslClientTransport API in secure cluster without HTTPRefer to this example of using the TSaslClientTransport API in secure cluster without     HTTP.