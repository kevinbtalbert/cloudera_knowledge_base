Quota violation policiesCloudera Docs
Quota violation policies
If quotas are set for the amount of space each HBase tenant can fill on HDFS,
        then a quota violation policy should be planned and implemented on the system.
When a quota violation policy is enabled, the table owner should not be allowed to
                remove the policy. The expectation is that the Master automatically removes the
                policy. However, the HBase superuser should still have permission.
Automatic
                removal of the quota violation policy after the violation is resolved can be
                accomplished via the same mechanisms that it was originally enforced. But the
                system should not immediately disable the violation policy when the violation is
                resolved.
The following describes quota violation policies that you might consider.
Disabling Tables
This is the “brute-force” policy, disabling any tables that violated the quota.
                This policy removes the risk that tables over quota affect your system. For most
                users, this is likely not a good choice as most sites want READ operations to still
                succeed.
One hypothetical situation when a disabling tables policy might be advisable is when there 
                are multiple active clusters
                hosting the same data and, because of a quota violation, it is discovered that one copy of the
                data does not have all of the data it should have. By disabling tables, you can prevent further
                discrepancies until the administrator can correct the problem.
Rejecting All WRITE Operations, Bulk Imports, and Compactions
This policy rejects all WRITEs and bulk imports to the region which the quota
                applies. Compactions for this region are also disabled to prevent the system from
                using more space because of the temporary space demand of a compaction. The only
                resolution in this case is administrator intervention to increase the quota that is
                being exceeded.
Rejecting All WRITE Operations and Bulk Imports
This is the same as the previous policy, except that compactions are still
                allowed. This allows users to set or alter a TTL on table and then perform a
                compaction to reduce the total used space. Inherently, using this violation policy
                means that you let used space to slightly rise before it is ultimately
                reduced.
Allowing DELETE Operations But Rejecting WRITE Operations
                    and Bulk Imports
This is another variation of the two previously listed policies. This policy
                allows users to run processes to delete data in the system. Like the previous
                policy, using this violation policy means that you let used space slightly rises
                before it is ultimately reduced. In this case, the deletions are propagated to disk
                and a compaction actually removes data previously stored on disk. TTL configuration
                and compactions can also be used to remove data.
Parent topic: Using quota management