Kafka-ZooKeeper performance tuningCloudera Docs
Kafka-ZooKeeper performance tuning
Recommendations and parameters in connection with Kafka-Zookeeper performance tuning. 
Kafka uses Zookeeper to store metadata information about topics, partitions, brokers and
      system coordination (such as membership statuses). Unavailability or slowness of Zookeeper
      makes the Kafka cluster unstable, and Kafka brokers do not automatically recover from it.
      Cloudera recommends to use a 3-5 machines Zookeeper ensemble solely dedicated to Kafka
      (co-location of applications can cause unwanted service disturbances). 

zookeeper.session.timeout.ms is a setting for Kafka that specifies how
        long Zookeeper shall wait for heartbeat messages before it considers the client (the Kafka
        broker) unavailable. If this happens, metadata information about partition leadership owned
        by the broker will be reassigned. If this setting is too high, then it might take a long
        time for the system to detect a broker failure. On the other hand, if it is set to too
        small, it might result in frequent leadership reassignments. 
jute.maxbuffer is a crucial Java system property for both Kafka and
        Zookeeper. It controls the maximum size of the data a znode can contain. The default value,
        one megabyte, might be increased for certain production use cases. 
There are cases where Zookeeper can require more connections. In those cases, it is
        recommended to increase the maxClientCnxns parameter in Zookeeper. 
Note that old Kafka consumers store consumer offset commits in Zookeeper (deprecated). It
        is recommended to use new consumers that store offsets in internal Kafka topics as this
        reduces the load on Zookeeper. 


