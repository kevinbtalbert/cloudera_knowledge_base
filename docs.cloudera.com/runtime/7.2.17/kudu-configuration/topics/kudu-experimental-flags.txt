Experimental flagsCloudera Docs
Experimental flags
 Some configuration flags are marked 'unsafe' and 'experimental'. Such flags are
  disabled by default. You can access these flags by enabling the additional flags, --unlock_unsafe_flags and --unlock_experimental_flags.
Note that these flags might be removed or modified
   without a deprecation period or any prior notice in future Kudu releases. Cloudera does not
   support using unsafe and experimental flags. As a rule of thumb, Cloudera will not support any
   configuration flags not explicitly documented in the Kudu Configuration Reference Guide. 
Some particularly impactful unsafe Kudu configuration options are:
--use-hybrid-clockSetting this flag to false is highly discouraged in
      any production-grade deployment, as it can introduce extensive latency and behavior such as
      not operating in COMMIT_WAIT consistency mode, failing to handle scan operations in
      READ_AT_SNAPSHOT and READ_YOUR_WRITES modes, and so on.
--allow_world_readable_credentialsDo not set this flag to true, but rather set the
      ownership and file access mask properly using chown and
       chmod commands.
--allow_unsafe_replication_factorDo not set this flag to true since even replication
      factors of (2 * N) is not any better than (2 * N - 1) because Kudu uses Raft consensus
      protocol.
--max_cell_size_bytesIf you need to increase it, you must consult with Cloudera to
      evaluate possible performance degradation and other issues depending on specific
     workload.
--max_num_columnsIf you need to adjust it, you must consult with Cloudera to evaluate
      possible performance degradation and other issues depending on specific workload.
--rpc_num_service_threadsYou should never set it higher than the number of CPU cores at a
      node.


Parent topic: Configure Kudu processes