Properties for configuring the BalancerCloudera Docs
Properties for configuring
      the Balancer
Depending on your requirements, you can configure various properties for the HDFS
      Balancer.

dfs.datanode.balance.max.concurrent.moves

Limits the maximum number of concurrent block moves that a DataNode is allowed for
                     balancing the cluster. If you set this configuration in a DataNode, the
                     DataNode throws an exception when the limit is exceeded. If you set this
                     configuration in the HDFS Balancer, the HDFS Balancer schedules concurrent
                     block movements within the specified limit. The DataNode setting and the HDFS
                     Balancer setting can be different. As both settings impose a restriction, an
                     effective setting is the minimum of them.
It is recommended that you set this to the highest possible value in DataNodes and
                     adjust the runtime value in the HDFS Balancer to gain the flexibility. The
                     default value is 100.
You can reconfigure without DataNode restart. Follow these steps to reconfigure a
                     DataNode:


Change the value of
                              dfs.datanode.balance.max.concurrent.moves from the
                              Configuration tab of the
                              HDFS service from Cloudera Manager.


Refresh the cluster.


You can use the default value of 100 as the maximum number of concurrent block
                     moves in most of the situations. If you want to set it to a lower value, you
                     can consider a value between 25 and 50. The recommended maximum value for this
                     parameter is 200.

dfs.datanode.balance.bandwidthPerSec

Limits the bandwidth in each DataNode using for balancing the cluster. Changing
                     this configuration does not require restarting DataNodes.
The default is 100 MB/s.

dfs.balancer.moverThreads

Limits the number of total concurrent moves for balancing in the
                            entire cluster. Set this property to the number of threads in the HDFS
                            Balancer for moving blocks. Each block move requires a thread.
The default is 1000.

dfs.balancer.max-size-to-move

With each iteration, the HDFS Balancer chooses DataNodes in pairs and moves data
                     between the DataNode pairs. Limits the maximum size of data that the HDFS
                     Balancer moves between a chosen DataNode pair. If you increase this
                     configuration when the network and disk are not saturated, increases the data
                     transfer between the DataNode pair in each iteration while the duration of an
                     iteration remains about the same.
The default is 10GB.

dfs.balancer.getBlocks.size

Specifies the total data size of the block list returned by a
                                getBlocks(..).
When the HDFS Balancer moves a certain amount of data between source and
                     destination DataNodes, it repeatedly invokes the getBlocks(..)
                        rpc to the Namenode to get lists of blocks from the source DataNode
                     until the required amount of data is scheduled.
The default is 2GB.

dfs.balancer.getBlocks.min-block-size

Specifies the minimum block size for the blocks used to balance the
                            cluster.
The default is 10MB.
noteIf the majority of files in the cluster have block size smaller than 10MB,
                     then set a lower value for this parameter, because the HDFS Balancer might not
                     be able to find enough blocks greater than this size to move.

dfs.datanode.block-pinning.enabled

Specifies if block-pinning is enabled. When you create a file, a user application
                     can specify a list of favorable DataNodes by way of the file creation API in
                     DistributedFileSystem. The NameNode uses its best effort, allocating blocks to
                     the favorable DataNodes. If dfs.datanode.block-pinning.enabled
                     is set to true, if a block replica is written to a favorable DataNode, it is
                     “pinned” to that DataNode. The pinned replicas are not moved for cluster
                     balancing to keep them stored in the specified favorable DataNodes. This
                     feature is useful for block distribution aware user applications such as
                     HBase.
The default is false.



Parent topic: Configurations and CLI options for the HDFS Balancer