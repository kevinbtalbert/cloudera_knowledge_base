SchemaRegistryClient properties referenceCloudera Docs
SchemaRegistryClient properties reference
Review the following reference for a comprehensive list of the SchemaRegistryClient
    properties.


Property Name
Description
Type
Default Value



schema.registry.url
The URL of the Schema Registry server which this client connects to.
String
http://localhost:9090/api/v1


schema.registry.client.local.jars.path
The local directory path to which downloaded JARs are copied to.
String
/tmp/schema-registry/local-jars


schema.registry.client.class.loader.cache.size
The maximum size of the classloader cache.
Int
1024


schema.registry.client.class.loader.cache.expiry.interval.secs
The expiry interval (in seconds) of an entry in the classloader cache.
Int
3600 sec


schema.registry.client.schema.version.cache.size
The maximum size of schema text cache.
Int
1024


schema.registry.client.schema.version.cache.expiry.interval.secs
The expiry interval (in seconds) of an entry in schema version cache.
Int
300 sec


schema.registry.client.schema.metadata.cache.size
Maximum size of schema metadata cache.
Int
1024


schema.registry.client.schema.metadata.cache.expiry.interval.secs
Expiry interval (in seconds) of an entry in schema metadata cache.
Int
300 sec


schema.registry.client.schema.text.cache.size
Maximum size of schema text cache.
Int
1024


schema.registry.client.schema.text.cache.expiry.interval.secs
Expiry interval (in seconds) of an entry in schema text cache.
Int
300 sec


schema.registry.client.url.selector
Schema Registry URL selector class.
String
com.hortonworks.registries.schemaregistry.client.FailoverUrlSelector


sasl.jaas.config
Schema Registry Dynamic JAAS configuration for SASL connection.
String
null


schema.registry.auth.username
Username for basic authentication.
String
null


schema.registry.auth.password
Password for basic authentication.
String
null


schema.registry.hash.function
Hashing algorithm for generating schema fingerprints.
String
MD5


schema.registry.auth.type
The type of authentication the client should use. If the value is
                oauth2, it will be configured for oauth login, otherwise it will
              use Kerberos. 
String
kerberos


schema.registry.oauth.client.id
Client ID for OAuth server in case of oauth login.
String
empty


schema.registry.oauth.secret
Secret for OAuth server in case of oauth login.
String
empty


schema.registry.oauth.server.url
OAuth server URL in case of oauth login.
String
empty


schema.registry.oauth.scope
OAuth scope in case of oauth login.
String
empty


schema.registry.oauth.request.method
HTTP method for requesting the oauth token
String
post


connector.provider.class
Classname of a Jersey connector provider. (For example:
              org.glassfish.jersey.apache.connector.ApacheConnectorProvider) Make sure the class is
              on classpath. If this is set, Backoff policy might need to be set to
                com.hortonworks.registries.schemaregistry.retry.policy.ExponentialBackoffPolicy.
String
empty


schema.registry.client.ssl
Schema Registry SSL configuration1
Object
null


schema.registry.client.retry.policy
Schema Registry Client retry configuration2
Object
NOOPBackoffPolicy with sleepTimeMs, maxAttempts, and timeoutMs set to 0.



Related informationCompatibility policies1  The schema.registry.client.ssl property
                expects a map of SSL configuration properties. The following snippet lists all valid
                properties.protocol: SSL
hostnameVerifierClass: com.hortonworks.registries.schemaregistry.avro.util.AcceptAllHostnameVerifier
keyStoreType: JKS
keyStorePath: ./src/test/resources/jks/client.jks
keyStorePassword: clientpwd
keyPassword:
keyStoreProvider:
keyManagerFactoryProvider:
keyManagerFactoryAlgorithm:
trustStoreType: JKS
trustStorePath: ./src/test/resources/jks/client.jks
trustStorePassword: clientpwd
trustStoreProvider:
trustManagerFactoryProvider:
trustManagerFactoryAlgorithm:2  The
                schema.registry.client.retry.policy expects a retry policy and a number of
                configuration properties related to the retry policy. The following YAML snippet
                lists all valid
                  properties:className: "com.hortonworks.registries.schemaregistry.retry.policy.ExponentialBackoffPolicy"
  config:
    sleepTimeMs: 100
    maxAttempts: 3
    timeoutMs: 3000
Valid
                  policies are as
                  follows:com.hortonworks.registries.schemaregistry.retry.policy.NOOPBackoffPolicy
com.hortonworks.registries.schemaregistry.retry.policy.FixedTimeBackoffPolicy
com.hortonworks.registries.schemaregistry.retry.policy.ExponentialBackoffPolicy