Configuring scheduler properties at the global levelCloudera Docs
Configuring scheduler properties at the global level
You can configure the scheduler properties to define the behaviour of all the queues.  All parent and children queues inherit the properties set using the Scheduler Properties.

In Cloudera Manager, you can use the Configuration tab to configure the scheduler
        properties.


In Cloudera Manager, select Clusters > YARN Queue Manager UI
         service.  

In the YARN Queue Manager window, click on the Configuration
          tab. 






In the Scheduler Configuration window, enter the value of the
          property and click Save. 
 


Setting global maximum application priorityYou can use Priority Scheduling to run YARN applications at higher priority, regardless of other applications that are already running in the cluster. YARN allocates more resources to applications running at a higher priority over those running at a lower priority. Priority Scheduling enables you to set an application's priority both at the time of submission and dynamically at run time.   Configuring preemptionPreemption allows applications of higher priority to preempt applications of lower     priority. Enabling Intra-Queue preemptionIntra-queue preemption prevents resource imbalances in a queue. Enabling LazyPreemptionBy enabling the LazyPreemption feature you can optimize the selection of containers from queues for preemption.          Containers are preempted only if the resources can be used by another application.Setting global application limitsTo avoid system-thrash due to an unmanageable load -- caused either by malicious users, or by accident -- the Capacity Scheduler enables you to place a static, configurable limit on the total number of concurrently active (both running and pending) applications at any one time.   Setting default Application Master resource limitThe Application Master (AM) resource limit that can be used to set a maximum percentage of cluster resources allocated specifically to Application Masters. This property has a default value of 10%, and exists to avoid cross-application deadlocks where significant resources in the cluster are occupied entirely by the Containers running ApplicationMasters.    Enabling asynchronous schedulerAsynchronous scheduler decouples the CapacityScheduler scheduling from Node Heartbeats. This improves the latency significantly.   Configuring queue mapping to use the user name from the application tag using Cloudera ManagerYou learn how to add service users to the YARN queue by following a mapping procedure. Configuring NodeManager heartbeatYou can control how many containers can be allocated in each NodeManager heartbeat. Configuring data localityCapacity Scheduler leverages Delay Scheduling to honor task locality     constraints. There are three levels of locality constraint: node-local, rack-local, and     off-switch. The scheduler counts the number of missed opportunities when the locality cannot be     satisfied and waits for this count to reach a threshold before relaxing the locality constraint     to the next level. You can configure this threshold using the Node Locality Delay       (yarn.scheduler.capacity.node-locality-delay) and Rack Locality Additional Delay       (yarn.scheduler.capacity.rack-locality-additional-delay) fields. Setting Maximum Parallel ApplicationYou can set the maximum number of applications that can run at the same time in a     cluster. Ensure you understand how the parallel application limits are inherited from the parent     queue in the queue hierarchy before using this option.